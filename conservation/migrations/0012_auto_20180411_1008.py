# -*- coding: utf-8 -*-
# Generated by Django 1.11.12 on 2018-04-11 02:08
from __future__ import unicode_literals

import conservation.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_fsm


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('conservation', '0011_auto_20180410_1504'),
    ]

    operations = [
        migrations.CreateModel(
            name='FileAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment', models.FileField(upload_to=conservation.models.fileattachment_media)),
                ('object_id', models.PositiveIntegerField()),
                ('title', models.CharField(blank=True, help_text='A self-explanatory title for the file attachment.', max_length=500, null=True, verbose_name='Title')),
                ('author', models.ForeignKey(blank=True, help_text='The person who authored and endorsed this file.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.AlterModelOptions(
            name='conservationcategory',
            options={'ordering': ['conservation_list', 'code'], 'verbose_name': 'Conservation Category', 'verbose_name_plural': 'Conservation Categories'},
        ),
        migrations.AlterModelOptions(
            name='conservationcriterion',
            options={'ordering': ['conservation_list', 'code'], 'verbose_name': 'Conservation Criterion', 'verbose_name_plural': 'Conservation Criteria'},
        ),
        migrations.AlterModelOptions(
            name='conservationlist',
            options={'ordering': ['-active_from'], 'verbose_name': 'Conservation List', 'verbose_name_plural': 'Conservation Lists'},
        ),
        migrations.AlterField(
            model_name='communitygazettal',
            name='status',
            field=django_fsm.FSMIntegerField(choices=[(0, 'Proposed'), (10, 'In review with experts'), (20, 'In review with public'), (30, 'In review with panel'), (40, 'In review with Branch Manager'), (50, 'In review with Division Director'), (60, 'In review with Director General'), (70, 'In review with Minister'), (80, 'Gazetted'), (90, 'Inactive')], db_index=True, default=0, help_text='The approval status of the Gazettal.', verbose_name='Approval status'),
        ),
        migrations.AlterField(
            model_name='conservationlist',
            name='scope_intl',
            field=models.BooleanField(db_index=True, default=False, help_text='Whether this list is applicable internationally.', verbose_name='Applies Internationally'),
        ),
        migrations.AlterField(
            model_name='taxongazettal',
            name='status',
            field=django_fsm.FSMIntegerField(choices=[(0, 'Proposed'), (10, 'In review with experts'), (20, 'In review with public'), (30, 'In review with panel'), (40, 'In review with Branch Manager'), (50, 'In review with Division Director'), (60, 'In review with Director General'), (70, 'In review with Minister'), (80, 'Gazetted'), (90, 'Inactive')], db_index=True, default=0, help_text='The approval status of the Gazettal.', verbose_name='Approval status'),
        ),
    ]
