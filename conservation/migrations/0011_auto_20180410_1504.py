# -*- coding: utf-8 -*-
# Generated by Django 1.11.12 on 2018-04-10 07:04
from __future__ import unicode_literals

from django.db import migrations, models
import django_fsm
import django


class Migration(migrations.Migration):

    dependencies = [
        ('conservation', '0010_auto_20180405_1039'),
    ]

    operations = [

        # migrations.RemoveField(
        #     model_name='communitygazettal',
        #     name='category',
        # ),
        # migrations.RemoveField(
        #     model_name='communitygazettal',
        #     name='community',
        # ),
        # migrations.RemoveField(
        #     model_name='communitygazettal',
        #     name='criteria',
        # ),
        # migrations.RemoveField(
        #     model_name='taxongazettal',
        #     name='category',
        # ),
        # migrations.RemoveField(
        #     model_name='taxongazettal',
        #     name='criteria',
        # ),
        # migrations.RemoveField(
        #     model_name='taxongazettal',
        #     name='taxon',
        # ),
        # migrations.AlterModelOptions(
        #     name='conservationcategory',
        #     options={'ordering': ['conservation_list', 'code'], 'verbose_name': 'Conservation Category',
        #              'verbose_name_plural': 'Conservation Categories'},
        # ),
        # migrations.AlterModelOptions(
        #     name='conservationcriterion',
        #     options={'ordering': ['conservation_list', 'code'],
        #              'verbose_name': 'Conservation Criterion', 'verbose_name_plural': 'Conservation Criteria'},
        # ),
        # migrations.AlterModelOptions(
        #     name='conservationlist',
        #     options={'ordering': ['-active_from'], 'verbose_name': 'Conservation List',
        #              'verbose_name_plural': 'Conservation Lists'},
        # ),
        # migrations.AlterField(
        #     model_name='conservationlist',
        #     name='scope_intl',
        #     field=models.BooleanField(
        #         db_index=True, default=False, help_text='Whether this list is applicable internationally.', verbose_name='Applies Internationally'),
        # ),
        # migrations.DeleteModel(
        #     name='CommunityGazettal',
        # ),
        # migrations.DeleteModel(
        #     name='TaxonGazettal',
        # ),
        migrations.RemoveField(
            model_name='communitygazettal',
            name='status',
        ),

        migrations.RemoveField(
            model_name='taxongazettal',
            name='status',
        ),

        migrations.AddField(
            model_name='communitygazettal',
            name='status',
            field=django_fsm.FSMIntegerField(
                choices=[(0, 'Proposed'),
                         (10, 'In review with experts'),
                         (20, 'In review with public'),
                         (30, 'In review with panel'),
                         (40, 'In review with Branch Manager'),
                         (50, 'In review with Division Director'),
                         (60, 'In review with Director General'),
                         (70, 'In review with Minister'),
                         (80, 'Gazetted'),
                         (90, 'Inactive')],
                db_index=True, default=0,
                help_text='The approval status of the Gazettal.',
                max_length=50, verbose_name='Approval status')),

        migrations.AddField(
            model_name='taxongazettal',
            name='status',
            field=django_fsm.FSMIntegerField(
                choices=[(0, 'Proposed'),
                         (10, 'In review with experts'),
                         (20, 'In review with public'),
                         (30, 'In review with panel'),
                         (40, 'In review with Branch Manager'),
                         (50, 'In review with Division Director'),
                         (60, 'In review with Director General'),
                         (70, 'In review with Minister'),
                         (80, 'Gazetted'),
                         (90, 'Inactive')],
                db_index=True, default=0,
                help_text='The approval status of the Gazettal.',
                max_length=50, verbose_name='Approval status')),

        # migrations.CreateModel(
        #     name='CommunityGazettal',
        #     fields=[
        #         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('status', django_fsm.FSMIntegerField(choices=[(0, 'Proposed'), (10, 'In review with experts'), (20, 'In review with public'), (30, 'In review with panel'), (40, 'In review with Branch Manager'), (50, 'In review with Division Director'), (
        #             60, 'In review with Director General'), (70, 'In review with Minister'), (80, 'Gazetted'), (90, 'Inactive')], db_index=True, default=0, help_text='The approval status of the Gazettal.', max_length=50, verbose_name='Approval status')),
        #         ('proposed_on', models.DateTimeField(blank=True,
        #                                              help_text='The date and time this Gazettal was proposed on.', null=True, verbose_name='Proposed on')),
        #         ('gazetted_on', models.DateTimeField(blank=True,
        #                                              help_text='The date and time this Gazettal was gazetted on.', null=True, verbose_name='Gazetted on')),
        #         ('deactivated_on', models.DateTimeField(
        #             blank=True, help_text='The date and time this Gazettal was deactivated on, most likely superseded by another Gazettal.', null=True, verbose_name='Deactivated on')),
        #         ('review_due', models.DateTimeField(
        #             blank=True, help_text='The date and time this Gazettal should be reviewed.', null=True, verbose_name='Review due date')),
        #         ('comments', models.TextField(blank=True,
        #                                       help_text='Append comments on approval process as appropriate.', null=True, verbose_name='Comments')),
        #         ('category_cache', models.TextField(
        #             blank=True, help_text='An auto-generated list of conservation categories.', null=True, verbose_name='Category list')),
        #         ('criteria_cache', models.TextField(blank=True,
        #                                             help_text='An auto-generated list of conservation criteria.', null=True, verbose_name='Criteria list')),
        #         ('label_cache', models.TextField(
        #             blank=True, help_text='An auto-generated label for the Gazettal minus the Taxon.', null=True, verbose_name='Gazettal label')),
        #         ('category', models.ManyToManyField(blank=True, help_text='The Conservation Categories can change during the approval process. Some combinations are valid, some are not.',
        #                                             to='conservation.ConservationCategory', verbose_name='Conservation Categories')),
        #         ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
        #                                         related_name='community_gazettal', to='taxonomy.Community')),
        #         ('criteria', models.ManyToManyField(blank=True, help_text='The Conservation Criteria form the reason for the choice of conservation categories.',
        #                                             to='conservation.ConservationCriterion', verbose_name='Conservation Criteria')),
        #     ],
        #     options={
        #         'verbose_name': 'Community Gazettal',
        #         'verbose_name_plural': 'Community Gazettals',
        #     },
        # ),
        # migrations.CreateModel(
        #     name='TaxonGazettal',
        #     fields=[
        #         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('status', django_fsm.FSMIntegerField(choices=[(0, 'Proposed'), (10, 'In review with experts'), (20, 'In review with public'), (30, 'In review with panel'), (40, 'In review with Branch Manager'), (50, 'In review with Division Director'), (
        #             60, 'In review with Director General'), (70, 'In review with Minister'), (80, 'Gazetted'), (90, 'Inactive')], db_index=True, default=0, help_text='The approval status of the Gazettal.', max_length=50, verbose_name='Approval status')),
        #         ('proposed_on', models.DateTimeField(blank=True,
        #                                              help_text='The date and time this Gazettal was proposed on.', null=True, verbose_name='Proposed on')),
        #         ('gazetted_on', models.DateTimeField(blank=True,
        #                                              help_text='The date and time this Gazettal was gazetted on.', null=True, verbose_name='Gazetted on')),
        #         ('deactivated_on', models.DateTimeField(
        #             blank=True, help_text='The date and time this Gazettal was deactivated on, most likely superseded by another Gazettal.', null=True, verbose_name='Deactivated on')),
        #         ('review_due', models.DateTimeField(
        #             blank=True, help_text='The date and time this Gazettal should be reviewed.', null=True, verbose_name='Review due date')),
        #         ('comments', models.TextField(blank=True,
        #                                       help_text='Append comments on approval process as appropriate.', null=True, verbose_name='Comments')),
        #         ('category_cache', models.TextField(
        #             blank=True, help_text='An auto-generated list of conservation categories.', null=True, verbose_name='Category list')),
        #         ('criteria_cache', models.TextField(blank=True,
        #                                             help_text='An auto-generated list of conservation criteria.', null=True, verbose_name='Criteria list')),
        #         ('label_cache', models.TextField(
        #             blank=True, help_text='An auto-generated label for the Gazettal minus the Taxon.', null=True, verbose_name='Gazettal label')),
        #         ('category', models.ManyToManyField(blank=True, help_text='The Conservation Categories can change during the approval process. Some combinations are valid, some are not.',
        #                                             to='conservation.ConservationCategory', verbose_name='Conservation Categories')),
        #         ('criteria', models.ManyToManyField(blank=True, help_text='The Conservation Criteria form the reason for the choice of conservation categories.',
        #                                             to='conservation.ConservationCriterion', verbose_name='Conservation Criteria')),
        #         ('taxon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
        #                                     related_name='taxon_gazettal', to='taxonomy.Taxon')),
        #     ],
        #     options={
        #         'verbose_name': 'Taxon Gazettal',
        #         'verbose_name_plural': 'Taxon Gazettals',
        #     },
        # ),
    ]
