# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2018-04-04 03:13
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django_fsm


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taxonomy', '0040_auto_20180404_1113'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommunityGazettal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_s5', models.BooleanField(db_index=True, default=False, help_text='Whether this Gazettal includes Conservation Category S5 (Migratory Bird).', verbose_name='Cons Category S5')),
                ('is_m1', models.BooleanField(db_index=True, default=False, help_text='Whether this Gazettal includes Conservation Category M1.', verbose_name='Cons Category M1')),
                ('is_m2', models.BooleanField(db_index=True, default=False, help_text='Whether this Gazettal includes Conservation Category M2.', verbose_name='Cons Category M2')),
                ('is_m3', models.BooleanField(db_index=True, default=False, help_text='Whether this Gazettal includes Conservation Category M3.', verbose_name='Cons Category M3')),
                ('is_m4', models.BooleanField(db_index=True, default=False, help_text='Whether this Gazettal includes Conservation Category M4.', verbose_name='Cons Category M4')),
                ('status', django_fsm.FSMField(choices=[(0, 'Proposed'), (10, 'In review with experts'), (20, 'In review with public'), (30, 'In review with panel'), (40, 'In review with Branch Manager'), (50, 'In review with Division Director'), (60, 'In review with Director General'), (70, 'In review with Minister'), (80, 'Gazetted'), (90, 'Inactive')], db_index=True, default=0, help_text='The approval status of the Gazettal.', max_length=50, verbose_name='Approval status')),
                ('proposed_on', models.DateTimeField(blank=True, help_text='The date and time this Gazettal was proposed on.', null=True, verbose_name='Proposed on')),
                ('gazetted_on', models.DateTimeField(blank=True, help_text='The date and time this Gazettal was gazetted on.', null=True, verbose_name='Gazetted on')),
                ('deactivated_on', models.DateTimeField(blank=True, help_text='The date and time this Gazettal was deactivated on, most likely superseded by another Gazettal.', null=True, verbose_name='Deactivated on')),
                ('review_due', models.DateTimeField(blank=True, help_text='The date and time this Gazettal should be reviewed.', null=True, verbose_name='Review due date')),
                ('comments', models.TextField(help_text='Append comments on approval process as appropriate.', verbose_name='Comments')),
            ],
            options={
                'verbose_name': 'Community Gazettal',
                'verbose_name_plural': 'Community Gazettals',
            },
        ),
        migrations.CreateModel(
            name='ConservationCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='A category code, unique within its conservation list.', max_length=500, verbose_name='Code')),
                ('label', models.CharField(help_text='An explanatory label.', max_length=500, verbose_name='Label')),
                ('description', models.TextField(help_text='A comprehensive description.', verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Conservation Category',
                'verbose_name_plural': 'Conservation Categories',
            },
        ),
        migrations.CreateModel(
            name='ConservationCriterion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='A criterion code, unique within its conservation list.', max_length=500, verbose_name='Code')),
                ('label', models.CharField(help_text='An explanatory label.', max_length=500, verbose_name='Label')),
                ('description', models.TextField(help_text='A comprehensive description.', verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Conservation Criterion',
                'verbose_name_plural': 'Conservation Criteria',
            },
        ),
        migrations.CreateModel(
            name='ConservationList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scope_wa', models.BooleanField(db_index=True, default=False, help_text='Whether this list is applicable state-wide.', verbose_name='Applies to WA')),
                ('scope_cmw', models.BooleanField(db_index=True, default=False, help_text='Whether this list is applicable nation-wide.', verbose_name='Applies to Commonwealth')),
                ('scope_intl', models.BooleanField(db_index=True, default=False, help_text='Whether this list is applicable internationally.', verbose_name='Applies to WA')),
                ('code', models.CharField(help_text='A Conservation List code.', max_length=500, unique=True, verbose_name='Code')),
                ('label', models.CharField(help_text='An explanatory label.', max_length=500, verbose_name='Label')),
                ('description', models.TextField(help_text='A comprehensive description.', verbose_name='Description')),
                ('active_from', models.DateTimeField(blank=True, help_text='The date and time from which this list is current.', null=True, verbose_name='Active from')),
                ('active_to', models.DateTimeField(blank=True, help_text='The date and time from which this list is non-current.', null=True, verbose_name='Active to')),
            ],
            options={
                'verbose_name': 'Conservation List',
                'verbose_name_plural': 'Conservation Lists',
            },
        ),
        migrations.CreateModel(
            name='TaxonGazettal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_s5', models.BooleanField(db_index=True, default=False, help_text='Whether this Gazettal includes Conservation Category S5 (Migratory Bird).', verbose_name='Cons Category S5')),
                ('is_m1', models.BooleanField(db_index=True, default=False, help_text='Whether this Gazettal includes Conservation Category M1.', verbose_name='Cons Category M1')),
                ('is_m2', models.BooleanField(db_index=True, default=False, help_text='Whether this Gazettal includes Conservation Category M2.', verbose_name='Cons Category M2')),
                ('is_m3', models.BooleanField(db_index=True, default=False, help_text='Whether this Gazettal includes Conservation Category M3.', verbose_name='Cons Category M3')),
                ('is_m4', models.BooleanField(db_index=True, default=False, help_text='Whether this Gazettal includes Conservation Category M4.', verbose_name='Cons Category M4')),
                ('status', django_fsm.FSMField(choices=[(0, 'Proposed'), (10, 'In review with experts'), (20, 'In review with public'), (30, 'In review with panel'), (40, 'In review with Branch Manager'), (50, 'In review with Division Director'), (60, 'In review with Director General'), (70, 'In review with Minister'), (80, 'Gazetted'), (90, 'Inactive')], db_index=True, default=0, help_text='The approval status of the Gazettal.', max_length=50, verbose_name='Approval status')),
                ('proposed_on', models.DateTimeField(blank=True, help_text='The date and time this Gazettal was proposed on.', null=True, verbose_name='Proposed on')),
                ('gazetted_on', models.DateTimeField(blank=True, help_text='The date and time this Gazettal was gazetted on.', null=True, verbose_name='Gazetted on')),
                ('deactivated_on', models.DateTimeField(blank=True, help_text='The date and time this Gazettal was deactivated on, most likely superseded by another Gazettal.', null=True, verbose_name='Deactivated on')),
                ('review_due', models.DateTimeField(blank=True, help_text='The date and time this Gazettal should be reviewed.', null=True, verbose_name='Review due date')),
                ('comments', models.TextField(help_text='Append comments on approval process as appropriate.', verbose_name='Comments')),
                ('category', models.ForeignKey(help_text='The Conservation Category can change during the approval process.', on_delete=django.db.models.deletion.CASCADE, to='conservation.ConservationCategory', verbose_name='Conservation Category')),
                ('criteria', models.ManyToManyField(help_text='The Conservation Criteria form the reason for the choice of conservation category.', to='conservation.ConservationCriterion', verbose_name='Conservation Criteria')),
                ('taxon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taxonomy.Taxon')),
            ],
            options={
                'verbose_name': 'Taxon Gazettal',
                'verbose_name_plural': 'Taxon Gazettals',
            },
        ),
        migrations.AddField(
            model_name='conservationcriterion',
            name='conservation_list',
            field=models.ForeignKey(help_text='The conservation list this code is described in.', on_delete=django.db.models.deletion.CASCADE, to='conservation.ConservationList', verbose_name='Conservation List'),
        ),
        migrations.AddField(
            model_name='conservationcategory',
            name='conservation_list',
            field=models.ForeignKey(help_text='The conservation list this code is described in.', on_delete=django.db.models.deletion.CASCADE, to='conservation.ConservationList', verbose_name='Conservation List'),
        ),
        migrations.AddField(
            model_name='communitygazettal',
            name='category',
            field=models.ForeignKey(help_text='The Conservation Category can change during the approval process.', on_delete=django.db.models.deletion.CASCADE, to='conservation.ConservationCategory', verbose_name='Conservation Category'),
        ),
        migrations.AddField(
            model_name='communitygazettal',
            name='community',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taxonomy.Community'),
        ),
        migrations.AddField(
            model_name='communitygazettal',
            name='criteria',
            field=models.ManyToManyField(help_text='The Conservation Criteria form the reason for the choice of conservation category.', to='conservation.ConservationCriterion', verbose_name='Conservation Criteria'),
        ),
        migrations.AlterUniqueTogether(
            name='conservationcriterion',
            unique_together=set([('conservation_list', 'code')]),
        ),
        migrations.AlterUniqueTogether(
            name='conservationcategory',
            unique_together=set([('conservation_list', 'code')]),
        ),
    ]
