# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2018-02-21 08:50
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('taxonomy', '0006_auto_20180221_1013'),
    ]

    operations = [
        migrations.CreateModel(
            name='HbvFamily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ogc_fid', models.BigIntegerField(blank=True, help_text='The OCG Feature ID of the record, used to identify the record.', null=True, verbose_name='GeoServer OGC FeatureID')),
                ('name_id', models.BigIntegerField(help_text='WACensus NameID, assigned by WACensus.', unique=True, verbose_name='NameID')),
                ('rank_id', models.BigIntegerField(blank=True, help_text='WACensus Taxonomic Rank ID.', null=True, verbose_name='Rank ID')),
                ('rank_name', models.CharField(blank=True, help_text='WACensus Taxonomic Rank Name.', max_length=500, null=True, verbose_name='Rank Name')),
                ('family_name', models.CharField(blank=True, help_text='', max_length=1000, null=True, verbose_name='Family Name')),
                ('is_current', models.CharField(blank=True, help_text='WACensus currency status.', max_length=100, null=True, verbose_name='Is name current?')),
                ('informal', models.CharField(blank=True, help_text='The approval status indicates whether a taxonomic name is a phrase name (PN), manuscript name (MS) or published (blank).', max_length=500, null=True, verbose_name='Name approval status')),
                ('comments', models.TextField(blank=True, help_text='Comments about the name.', null=True, verbose_name='Comments')),
                ('family_code', models.CharField(blank=True, help_text='Taxonomic Family Code, deprecated, no not use.', max_length=1000, null=True, verbose_name='Family Code')),
                ('linear_sequence', models.BigIntegerField(blank=True, help_text='Always populated for plant families, may be blank for other names.', null=True, verbose_name='Linear sequence')),
                ('order_name_id', models.BigIntegerField(help_text='WACensus NameID, assigned by WACensus.', unique=True, verbose_name='Order NameID')),
                ('order_name', models.CharField(blank=True, help_text='', max_length=1000, null=True, verbose_name='Order Name')),
                ('class_name_id', models.BigIntegerField(help_text='WACensus NameID, assigned by WACensus.', unique=True, verbose_name='Class NameID')),
                ('class_name', models.CharField(blank=True, help_text='', max_length=1000, null=True, verbose_name='Class Name')),
                ('division_name_id', models.BigIntegerField(help_text='WACensus NameID, assigned by WACensus.', unique=True, verbose_name='Division NameID')),
                ('division_name', models.CharField(blank=True, help_text='', max_length=1000, null=True, verbose_name='Order Name')),
                ('kingdom_name', models.CharField(blank=True, help_text='', max_length=1000, null=True, verbose_name='Kingdom Name')),
                ('author', models.CharField(blank=True, help_text='Taxonomic Author', max_length=1000, null=True, verbose_name='Author')),
                ('editor', models.CharField(blank=True, help_text='The rditor of the journal the name was published in.', max_length=1000, null=True, verbose_name='Editor')),
                ('reference', models.CharField(blank=True, help_text='The citation for the reference article this name was published in.', max_length=1000, null=True, verbose_name='Reference')),
                ('supra_code', models.CharField(blank=True, help_text='', max_length=1000, null=True, verbose_name='HBV Suprafamily Group Code')),
                ('added_on', models.CharField(blank=True, help_text='Date on which this record was added to WACensus.', max_length=100, null=True, verbose_name='WACensus added on')),
                ('updated_on', models.CharField(blank=True, help_text='Date on which this record was updated in WACensus.', max_length=100, null=True, verbose_name='WACensus updated on')),
                ('md5_rowhash', models.CharField(blank=True, help_text='An MD5 hash of the record, used to indicate updates.', max_length=500, null=True, verbose_name='GeoServer MD5 rowhash')),
            ],
            options={
                'ordering': ['kingdom_name', 'division_name', 'class_name', 'order_name', 'family_name'],
                'verbose_name': 'HBV Family',
                'verbose_name_plural': 'HBV Families',
            },
        ),
        migrations.CreateModel(
            name='HbvGenus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ogc_fid', models.BigIntegerField(blank=True, help_text='The OCG Feature ID of the record, used to identify the record.', null=True, verbose_name='GeoServer OGC FeatureID')),
                ('name_id', models.BigIntegerField(help_text='WACensus NameID, assigned by WACensus.', unique=True, verbose_name='NameID')),
                ('kingdom_id', models.BigIntegerField(blank=True, help_text='WACensus Kingdom ID.', null=True, verbose_name='Kingdom ID')),
                ('rank_id', models.BigIntegerField(blank=True, help_text='WACensus Taxonomic Rank ID.', null=True, verbose_name='Rank ID')),
                ('rank_name', models.CharField(blank=True, help_text='WACensus Taxonomic Rank Name.', max_length=500, null=True, verbose_name='Rank Name')),
                ('genus', models.CharField(blank=True, help_text='.', max_length=1000, null=True, verbose_name='')),
                ('is_current', models.CharField(blank=True, help_text='WACensus currency status.', max_length=100, null=True, verbose_name='Is name current?')),
                ('informal', models.CharField(blank=True, help_text='The approval status indicates whether a taxonomic name is a phrase name (PN), manuscript name (MS) or published (blank).', max_length=500, null=True, verbose_name='Name approval status')),
                ('comments', models.TextField(blank=True, help_text='Comments about the name.', null=True, verbose_name='Comments')),
                ('family_code', models.CharField(blank=True, help_text='Taxonomic Family Code, deprecated, no not use.', max_length=1000, null=True, verbose_name='Family Code')),
                ('family_nid', models.BigIntegerField(blank=True, help_text='WACensus Family NameID', null=True, verbose_name='Family NameID')),
                ('author', models.CharField(blank=True, help_text='Taxonomic Author', max_length=1000, null=True, verbose_name='Author')),
                ('editor', models.CharField(blank=True, help_text='The rditor of the journal the name was published in.', max_length=1000, null=True, verbose_name='Editor')),
                ('reference', models.CharField(blank=True, help_text='The citation for the reference article this name was published in.', max_length=1000, null=True, verbose_name='Reference')),
                ('genus_id', models.BigIntegerField(blank=True, help_text='WACensus Genus ID', null=True, verbose_name='Genus ID')),
                ('added_on', models.CharField(blank=True, help_text='Date on which this record was added to WACensus.', max_length=100, null=True, verbose_name='WACensus added on')),
                ('updated_on', models.CharField(blank=True, help_text='Date on which this record was updated in WACensus.', max_length=100, null=True, verbose_name='WACensus updated on')),
                ('md5_rowhash', models.CharField(blank=True, help_text='An MD5 hash of the record, used to indicate updates.', max_length=500, null=True, verbose_name='GeoServer MD5 rowhash')),
            ],
            options={
                'ordering': ['genus'],
                'verbose_name': 'HBV Genus',
                'verbose_name_plural': 'HBV Genera',
            },
        ),
        migrations.CreateModel(
            name='HbvGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ogc_fid', models.BigIntegerField(blank=True, help_text='The OCG Feature ID of the record, used to identify the record.', null=True, verbose_name='GeoServer OGC FeatureID')),
                ('class_id', models.CharField(blank=True, help_text='', max_length=1000, null=True, verbose_name='HBV Suprafamily Group Code')),
                ('name_id', models.BigIntegerField(help_text='WACensus NameID, assigned by WACensus.', unique=True, verbose_name='NameID')),
                ('updated_by', models.CharField(blank=True, help_text='The person or system who updated this record last in WACensus.', max_length=100, null=True, verbose_name='Updated by')),
                ('updated_on', models.CharField(blank=True, help_text='Date on which this record was updated in WACensus.', max_length=100, null=True, verbose_name='WACensus updated on')),
                ('rank_name', models.CharField(blank=True, help_text='WACensus Taxonomic Rank Name.', max_length=500, null=True, verbose_name='Rank Name')),
                ('name', models.CharField(blank=True, help_text='.', max_length=1000, null=True, verbose_name='')),
                ('md5_rowhash', models.CharField(blank=True, help_text='An MD5 hash of the record, used to indicate updates.', max_length=500, null=True, verbose_name='GeoServer MD5 rowhash')),
            ],
            options={
                'ordering': ['class_id', 'rank_name', 'name'],
                'verbose_name': 'HBV Suprafamily Group Membership',
                'verbose_name_plural': 'HBV Suprafamily Group Memberships',
            },
        ),
        migrations.CreateModel(
            name='HbvName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_id', models.BigIntegerField(help_text='WACensus NameID, assigned by WACensus.', unique=True, verbose_name='NameID')),
                ('name', models.CharField(blank=True, help_text='Built by WACensus by concatenating all name fields, excluding author and editor. Phrase names may contain authors.', max_length=1000, null=True, verbose_name='Name')),
                ('full_name', models.CharField(blank=True, help_text='Built by WACensus by concatenating all name fields, including author and editor.', max_length=1000, null=True, verbose_name='Full Name')),
                ('vernacular', models.CharField(blank=True, help_text='Preferred Vernacular Name.', max_length=1000, null=True, verbose_name='Preferred Vernacular Name')),
                ('all_vernaculars', models.TextField(blank=True, help_text='All Vernacular Names in order of preference including preferred vernacular name.', null=True, verbose_name='All Vernacular Names')),
                ('kingdom_id', models.BigIntegerField(blank=True, help_text='WACensus Kingdom ID.', null=True, verbose_name='Kingdom ID')),
                ('family_code', models.CharField(blank=True, help_text='Taxonomic Family Code, deprecated, no not use.', max_length=1000, null=True, verbose_name='Family Code')),
                ('family_nid', models.BigIntegerField(blank=True, help_text='WACensus Family NameID', null=True, verbose_name='Family NameID')),
                ('rank_id', models.BigIntegerField(blank=True, help_text='WACensus Taxonomic Rank ID.', null=True, verbose_name='Rank ID')),
                ('rank_name', models.CharField(blank=True, help_text='WACensus Taxonomic Rank Name.', max_length=500, null=True, verbose_name='Rank Name')),
                ('name1', models.CharField(blank=True, help_text='Taxon name if taxon is of rank kingdom to subgenus. Genus if taxon is of rank species or below.', max_length=500, null=True, verbose_name='Name 1')),
                ('name2', models.CharField(blank=True, help_text='Empty if taxon is of rank kingdom to subgenus. Specific epithet if taxon is of rank species or below.', max_length=500, null=True, verbose_name='Name 2')),
                ('rank3', models.CharField(blank=True, help_text='Whichever rank comes after the species epithet: subsp, var, forma, subforma.', max_length=500, null=True, verbose_name='Rank 3')),
                ('name3', models.CharField(blank=True, help_text='Whichever name comes after rank 3.', max_length=500, null=True, verbose_name='Name 3')),
                ('rank4', models.CharField(blank=True, help_text='Whichever rank comes after name 3: var, forma, subforma.', max_length=500, null=True, verbose_name='Rank 4')),
                ('name4', models.CharField(blank=True, help_text='Whichever name comes after rank 4.', max_length=500, null=True, verbose_name='Name 4')),
                ('author', models.CharField(blank=True, help_text='Taxonomic Author', max_length=1000, null=True, verbose_name='Author')),
                ('editor', models.CharField(blank=True, help_text='The rditor of the journal the name was published in.', max_length=1000, null=True, verbose_name='Editor')),
                ('reference', models.CharField(blank=True, help_text='The citation for the reference article this name was published in.', max_length=1000, null=True, verbose_name='Reference')),
                ('pub_id', models.BigIntegerField(blank=True, help_text='WACensus Publication ID', null=True, verbose_name='Publication ID')),
                ('vol_info', models.CharField(blank=True, help_text='Journal Volume Number.', max_length=500, null=True, verbose_name='Journal Volume Number')),
                ('pub_year', models.IntegerField(blank=True, help_text='Publication Year.', null=True, verbose_name='Publication Year')),
                ('form_desc_yr', models.CharField(blank=True, help_text='Year of first description.', max_length=100, null=True, verbose_name='Described on (year)')),
                ('form_desc_mn', models.CharField(blank=True, help_text='Month of first description.', max_length=100, null=True, verbose_name='Described on (month)')),
                ('form_desc_dy', models.CharField(blank=True, help_text='Day of first description.', max_length=100, null=True, verbose_name='Described on (day)')),
                ('is_current', models.CharField(blank=True, help_text='WACensus currency status.', max_length=100, null=True, verbose_name='Is name current?')),
                ('origin', models.CharField(blank=True, help_text='Deprecated. * = introduced into WA.', max_length=1000, null=True, verbose_name='Origin')),
                ('naturalised_status', models.CharField(blank=True, help_text='Naturalisation status.', max_length=100, null=True, verbose_name='Naturalisation status')),
                ('naturalised_certainty', models.CharField(blank=True, help_text='Naturalisation certainty.', max_length=100, null=True, verbose_name='Naturalisation certainty')),
                ('naturalised_comments', models.TextField(blank=True, help_text='Naturalisation comments.', null=True, verbose_name='Naturalisation comments')),
                ('is_eradicated', models.CharField(blank=True, help_text='Whether taxon is eradicated or not.', max_length=100, null=True, verbose_name='Is eradicated?')),
                ('informal', models.CharField(blank=True, help_text='The approval status indicates whether a taxonomic name is a phrase name (PN), manuscript name (MS) or published (blank).', max_length=500, null=True, verbose_name='Name approval status')),
                ('comments', models.TextField(blank=True, help_text='Comments about the name.', null=True, verbose_name='Comments')),
                ('added_by', models.CharField(blank=True, help_text='The person or system who added this record to WACensus.', max_length=100, null=True, verbose_name='Added by')),
                ('added_on', models.CharField(blank=True, help_text='Date on which this record was added to WACensus.', max_length=100, null=True, verbose_name='WACensus added on')),
                ('updated_by', models.CharField(blank=True, help_text='The person or system who updated this record last in WACensus.', max_length=100, null=True, verbose_name='Updated by')),
                ('updated_on', models.CharField(blank=True, help_text='Date on which this record was updated in WACensus.', max_length=100, null=True, verbose_name='WACensus updated on')),
                ('linear_sequence', models.BigIntegerField(blank=True, help_text='Always populated for plant families, may be blank for other names.', null=True, verbose_name='Linear sequence')),
                ('md5_rowhash', models.CharField(blank=True, help_text='An MD5 hash of the record, used to indicate updates.', max_length=500, null=True, verbose_name='GeoServer MD5 rowhash')),
                ('ogc_fid', models.BigIntegerField(blank=True, help_text='The OCG Feature ID of the record, used to identify the record.', null=True, verbose_name='GeoServer OGC FeatureID')),
            ],
            options={
                'ordering': ['kingdom_id', 'family_nid', 'name_id'],
                'verbose_name': 'HBV Name',
                'verbose_name_plural': 'HBV Names',
            },
        ),
        migrations.CreateModel(
            name='HbvSpecies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ogc_fid', models.BigIntegerField(blank=True, help_text='The OCG Feature ID of the record, used to identify the record.', null=True, verbose_name='GeoServer OGC FeatureID')),
                ('name_id', models.BigIntegerField(help_text='WACensus NameID, assigned by WACensus.', unique=True, verbose_name='NameID')),
                ('kingdom_id', models.BigIntegerField(blank=True, help_text='WACensus Kingdom ID.', null=True, verbose_name='Kingdom ID')),
                ('rank_id', models.BigIntegerField(blank=True, help_text='WACensus Taxonomic Rank ID.', null=True, verbose_name='Rank ID')),
                ('rank_name', models.CharField(blank=True, help_text='WACensus Taxonomic Rank Name.', max_length=500, null=True, verbose_name='Rank Name')),
                ('family_code', models.CharField(blank=True, help_text='Taxonomic Family Code, deprecated, no not use.', max_length=1000, null=True, verbose_name='Family Code')),
                ('family_nid', models.BigIntegerField(blank=True, help_text='WACensus Family NameID', null=True, verbose_name='Family NameID')),
                ('genus', models.CharField(blank=True, help_text='Taxon name if taxon is of rank kingdom to subgenus. Genus if taxon is of rank species or below.', max_length=500, null=True, verbose_name='Genus')),
                ('species', models.CharField(blank=True, help_text='Empty if taxon is of rank kingdom to subgenus. Specific epithet if taxon is of rank species or below.', max_length=500, null=True, verbose_name='Species')),
                ('infra_rank', models.CharField(blank=True, help_text='Whichever rank comes after the species epithet: subsp, var, forma, subforma.', max_length=500, null=True, verbose_name='Rank after species')),
                ('infra_name', models.CharField(blank=True, help_text='Whichever name comes after infra_rank.', max_length=500, null=True, verbose_name='Name after species name')),
                ('infra_rank2', models.CharField(blank=True, help_text='Whichever rank comes after infra_name: var, forma, subforma.', max_length=500, null=True, verbose_name='Lowest rank')),
                ('infra_name2', models.CharField(blank=True, help_text='Whichever name comes after infra_rank2.', max_length=500, null=True, verbose_name='Lowest name')),
                ('author', models.CharField(blank=True, help_text='Taxonomic Author', max_length=1000, null=True, verbose_name='Author')),
                ('editor', models.CharField(blank=True, help_text='The rditor of the journal the name was published in.', max_length=1000, null=True, verbose_name='Editor')),
                ('reference', models.CharField(blank=True, help_text='The citation for the reference article this name was published in.', max_length=1000, null=True, verbose_name='Reference')),
                ('comments', models.TextField(blank=True, help_text='Comments about the name.', null=True, verbose_name='Comments')),
                ('vernacular', models.CharField(blank=True, help_text='Preferred Vernacular Name.', max_length=1000, null=True, verbose_name='Preferred Vernacular Name')),
                ('all_vernaculars', models.TextField(blank=True, help_text='All Vernacular Names in order of preference including preferred vernacular name.', null=True, verbose_name='All Vernacular Names')),
                ('species_name', models.CharField(blank=True, help_text='Built by WACensus by concatenating all name fields, excluding author and editor. Phrase names may contain authors.', max_length=1000, null=True, verbose_name='Name')),
                ('species_code', models.CharField(blank=True, help_text='WACensus species shortcode, used for data entry.', max_length=100, null=True, verbose_name='Species Code')),
                ('is_current', models.CharField(blank=True, help_text='WACensus currency status.', max_length=100, null=True, verbose_name='Is name current?')),
                ('naturalised', models.CharField(blank=True, help_text='', max_length=100, null=True, verbose_name='Naturalised')),
                ('naturalised_status', models.CharField(blank=True, help_text='Naturalisation status.', max_length=100, null=True, verbose_name='Naturalisation status')),
                ('naturalised_certainty', models.CharField(blank=True, help_text='Naturalisation certainty.', max_length=100, null=True, verbose_name='Naturalisation certainty')),
                ('naturalised_comments', models.TextField(blank=True, help_text='Naturalisation comments.', null=True, verbose_name='Naturalisation comments')),
                ('is_eradicated', models.CharField(blank=True, help_text='Whether taxon is eradicated or not.', max_length=100, null=True, verbose_name='Is eradicated?')),
                ('informal', models.CharField(blank=True, help_text='The approval status indicates whether a taxonomic name is a phrase name (PN), manuscript name (MS) or published (blank).', max_length=500, null=True, verbose_name='Name approval status')),
                ('added_on', models.CharField(blank=True, help_text='Date on which this record was added to WACensus.', max_length=100, null=True, verbose_name='WACensus added on')),
                ('updated_on', models.CharField(blank=True, help_text='Date on which this record was updated in WACensus.', max_length=100, null=True, verbose_name='WACensus updated on')),
                ('consv_code', models.CharField(blank=True, help_text='', max_length=100, null=True, verbose_name='Conservation Code')),
                ('ranking', models.CharField(blank=True, help_text='', max_length=100, null=True, verbose_name='Ranking')),
                ('linear_sequence', models.BigIntegerField(blank=True, help_text='Always populated for plant families, may be blank for other names.', null=True, verbose_name='Linear sequence')),
                ('md5_rowhash', models.CharField(blank=True, help_text='An MD5 hash of the record, used to indicate updates.', max_length=500, null=True, verbose_name='GeoServer MD5 rowhash')),
            ],
            options={
                'ordering': ['kingdom_id', 'genus', 'species'],
                'verbose_name': 'HBV Species',
                'verbose_name_plural': 'HBV Species',
            },
        ),
        migrations.CreateModel(
            name='HbvSupra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ogc_fid', models.BigIntegerField(blank=True, help_text='The OCG Feature ID of the record, used to identify the record.', null=True, verbose_name='GeoServer OGC FeatureID')),
                ('supra_code', models.CharField(blank=True, help_text='', max_length=1000, null=True, verbose_name='HBV Suprafamily Group Code')),
                ('supra_name', models.CharField(blank=True, help_text='', max_length=1000, null=True, verbose_name='HBV Suprafamily Group Name')),
                ('updated_on', models.CharField(blank=True, help_text='Date on which this record was updated in WACensus.', max_length=100, null=True, verbose_name='WACensus updated on')),
                ('md5_rowhash', models.CharField(blank=True, help_text='An MD5 hash of the record, used to indicate updates.', max_length=500, null=True, verbose_name='GeoServer MD5 rowhash')),
            ],
            options={
                'ordering': ['supra_code'],
                'verbose_name': 'HBV Suprafamily Group',
                'verbose_name_plural': 'HBV Suprafamily Groups',
            },
        ),
        migrations.CreateModel(
            name='HbvVernacular',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ogc_fid', models.BigIntegerField(blank=True, help_text='The OCG Feature ID of the record, used to identify the record.', null=True, verbose_name='GeoServer OGC FeatureID')),
                ('name_id', models.BigIntegerField(help_text='WACensus NameID, assigned by WACensus.', verbose_name='NameID')),
                ('name', models.CharField(blank=True, help_text='Full taxonomic name without author. Different concepts (defined by different authors) can have identical names.', max_length=1000, null=True, verbose_name='Name')),
                ('vernacular', models.CharField(blank=True, help_text='Full taxonomic name without author. Different concepts (defined by different authors) can have identical names.', max_length=1000, null=True, verbose_name='Vernacular Name')),
                ('language', models.CharField(blank=True, help_text='The language of the vernacular name.', max_length=1000, null=True, verbose_name='Language')),
                ('lang_pref', models.CharField(blank=True, help_text='Whether the vernacular name is the preferred name within the given language.', max_length=1000, null=True, verbose_name='Preferred within given language')),
                ('preferred', models.CharField(blank=True, help_text='Whether this vernacular name is the preferred one out of all vernacular names for the given NameID.', max_length=100, null=True, verbose_name='Preferred vernacular name')),
                ('source', models.CharField(blank=True, help_text='The source of the vernacular name.', max_length=1000, null=True, verbose_name='source')),
                ('updated_by', models.CharField(blank=True, help_text='The person or system who updated this record last in WACensus.', max_length=100, null=True, verbose_name='Updated by')),
                ('updated_on', models.CharField(blank=True, help_text='Date on which this record was updated in WACensus.', max_length=100, null=True, verbose_name='WACensus updated on')),
                ('md5_rowhash', models.CharField(blank=True, help_text='An MD5 hash of the record, used to indicate updates.', max_length=500, null=True, verbose_name='GeoServer MD5 rowhash')),
            ],
        ),
        migrations.CreateModel(
            name='HbvXrefs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ogc_fid', models.BigIntegerField(blank=True, help_text='The OCG Feature ID of the record, used to identify the record in GeoServer.', null=True, verbose_name='GeoServer OGC FeatureID')),
                ('xref_id', models.BigIntegerField(blank=True, help_text='The WACensus xref ID of the record, used to identify the record in WACensus.', null=True, verbose_name='WACensus xref ID')),
                ('old_name_id', models.BigIntegerField(help_text='WACensus NameID, assigned by WACensus.', unique=True, verbose_name='Old NameID')),
                ('new_name_id', models.BigIntegerField(help_text='WACensus NameID, assigned by WACensus.', unique=True, verbose_name='New NameID')),
                ('xref_type', models.CharField(blank=True, choices=[('MIS', 'Misapplied name'), ('TSY', 'Taxonomic synonym'), ('NSY', 'Nomenclatural synonym'), ('EXC', 'Excluded name'), ('CON', 'Concept change'), ('FOR', 'Formal description'), ('OGV', 'Orthographic variant'), ('ERR', 'Name in error'), ('ISY', 'Informal Synonym')], help_text='The taxonomic type of this crossreference.', max_length=100, null=True, verbose_name='Type')),
                ('active', models.CharField(blank=True, help_text='Inactive crossrefrences are considered deleted.', max_length=100, null=True, verbose_name='Active')),
                ('authorised_by', models.CharField(blank=True, help_text='The person or system who authorised this record last in WACensus.', max_length=100, null=True, verbose_name='WACensus authorised by')),
                ('authorised_on', models.CharField(blank=True, help_text='Date on which this record was authorised in WACensus.', max_length=100, null=True, verbose_name='WACensus authorised on')),
                ('comments', models.TextField(blank=True, help_text='Comments are words to clarify things.', null=True, verbose_name='Comments')),
                ('added_on', models.CharField(blank=True, help_text='Date on which this record was added to WACensus.', max_length=100, null=True, verbose_name='WACensus added on')),
                ('updated_on', models.CharField(blank=True, help_text='Date on which this record was updated in WACensus.', max_length=100, null=True, verbose_name='WACensus updated on')),
                ('md5_rowhash', models.CharField(blank=True, help_text='An MD5 hash of the record, used to indicate updates.', max_length=500, null=True, verbose_name='GeoServer MD5 rowhash')),
            ],
        ),
        migrations.DeleteModel(
            name='HbvTaxon',
        ),
    ]
