# -*- coding: utf-8 -*-
# Generated by Django 1.9.9 on 2016-09-22 04:27
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('observations', '0015_auto_20160920_1627'),
    ]

    operations = [
        migrations.AddField(
            model_name='animalencounter',
            name='cause_of_death',
            field=models.CharField(choices=[('na', 'not observed'), ('natural', 'Natural death'), ('predation', 'Natural predation'), ('harvest', 'Harvested'), ('drowned-entangled', 'Drowned entangled'), ('boat-strike', 'Died after boat strike'), ('ingested-debris', 'Died of ingested debris'), ('poisoned', 'Poisoned')], default='na', help_text='', max_length=300, verbose_name='Cause of death'),
        ),
        migrations.AddField(
            model_name='animalencounter',
            name='cause_of_death_confidence',
            field=models.CharField(choices=[('na', 'not observed'), ('guess', 'Guess based on insuffient evidence'), ('expert-opinion', 'Expert opinion based on evidence'), ('validated', 'Validated by authoritative source')], default='na', help_text='', max_length=300, verbose_name='Cause of death'),
        ),
        migrations.AlterField(
            model_name='animalencounter',
            name='checked_for_flipper_tags',
            field=models.CharField(choices=[('na', 'NA'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Checked for flipper tags'),
        ),
        migrations.AlterField(
            model_name='animalencounter',
            name='checked_for_injuries',
            field=models.CharField(choices=[('na', 'NA'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Checked for injuries'),
        ),
        migrations.AlterField(
            model_name='animalencounter',
            name='habitat',
            field=models.CharField(choices=[('na', 'not observed'), ('beach-below-high-water', 'beach below high water mark'), ('beach-above-high-water', 'beach between high water mark and dune'), ('beach-edge-of-vegetation', 'edge of dune and vegetation'), ('in-dune-vegetation', 'inside dune and vegetation'), ('beach', 'beach (below vegetation line)'), ('bays-estuaries', 'bays, estuaries and other enclosed shallow soft sediments'), ('dune', 'dune'), ('dune-constructed-hard-substrate', 'dune, constructed hard substrate (concrete slabs, timber floors, helipad)'), ('dune-grass-area', 'dune, grass area'), ('dune-compacted-path', 'dune, hard compacted areas (road ways, paths)'), ('dune-rubble', 'dune, rubble, usually coral'), ('dune-bare-sand', 'dune, bare sand area'), ('dune-beneath-vegetation', 'dune, beneath tree or shrub'), ('slope-front-dune', 'dune, front slope'), ('sand-flats', 'sand flats'), ('slope-grass', 'slope, grass area'), ('slope-bare-sand', 'slope, bare sand area'), ('slope-beneath-vegetation', 'slope, beneath tree or shrub'), ('below-mean-spring-high-water-mark', 'below the mean spring high water line or current level of inundation'), ('lagoon-patch-reef', 'lagoon, patch reef'), ('lagoon-open-sand', 'lagoon, open sand areas'), ('mangroves', 'mangroves'), ('reef-coral', 'coral reef'), ('reef-crest-front-slope', 'reef crest (dries at low water) and front reef slope areas'), ('reef-flat', 'reef flat, dries at low tide'), ('reef-seagrass-flats', 'coral reef with seagrass flats'), ('reef-rocky', 'rocky reef'), ('open-water', 'open water')], default='na', help_text='The habitat in which the animal was encountered.', max_length=500, verbose_name='Habitat'),
        ),
        migrations.AlterField(
            model_name='animalencounter',
            name='health',
            field=models.CharField(choices=[('na', 'unknown health'), ('alive', 'alive, healthy'), ('alive-injured', 'alive, injured'), ('alive-then-died', 'alive, then died'), ('dead-edible', 'dead, fresh'), ('dead-organs-intact', 'dead, organs intact'), ('dead-advanced', 'dead, organs decomposed'), ('dead-mummified', 'dead, mummified'), ('dead-disarticulated', 'dead, disarticulated'), ('other', 'other')], default='na', help_text='On a scale from the Fresh Prince of Bel Air to 80s Hair Metal: how dead and decomposed is the animal?', max_length=300, verbose_name='Health status'),
        ),
        migrations.AlterField(
            model_name='animalencounter',
            name='maturity',
            field=models.CharField(choices=[('na', 'unknown maturity'), ('hatchling', 'hatchling'), ('post-hatchling', 'post-hatchling'), ('juvenile', 'juvenile'), ('pre-pubsecent-immature', 'pre-pubsecent immature'), ('pubsecent-immature', 'pubsecent immature'), ('adult-measured', 'adult (status determined from carapace and tail measurements)'), ('unweaned', 'unweaned immature'), ('weaned', 'weaned immature'), ('adult', 'adult')], default='unknown', help_text="The animal's maturity.", max_length=300, verbose_name='Maturity'),
        ),
        migrations.AlterField(
            model_name='animalencounter',
            name='scanned_for_pit_tags',
            field=models.CharField(choices=[('na', 'NA'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Scanned for PIT tags'),
        ),
        migrations.AlterField(
            model_name='animalencounter',
            name='sex',
            field=models.CharField(choices=[('na', 'unknown sex'), ('male', 'male'), ('female', 'female'), ('intersex', 'hermaphrodite or intersex')], default='na', help_text="The animal's sex.", max_length=300, verbose_name='Sex'),
        ),
        migrations.AlterField(
            model_name='animalencounter',
            name='taxon',
            field=models.CharField(choices=[('na', 'not observed'), ('Cheloniidae', 'Marine turtles'), ('Cetacea', 'Whales and Dolphins'), ('Pinnipedia', 'Pinnipeds'), ('Sirenia', 'Dugongs'), ('Elasmobranchii', 'Sharks and Rays')], default='Cheloniidae', help_text='The taxonomic group of the animal.', max_length=300, verbose_name='Taxonomic group'),
        ),
        migrations.AlterField(
            model_name='tracktallyobservation',
            name='bird_predation',
            field=models.CharField(choices=[('na', 'NA'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Bird predation'),
        ),
        migrations.AlterField(
            model_name='tracktallyobservation',
            name='croc_predation',
            field=models.CharField(choices=[('na', 'NA'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Crocodile predation'),
        ),
        migrations.AlterField(
            model_name='tracktallyobservation',
            name='dingo_predation',
            field=models.CharField(choices=[('na', 'NA'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Dingo predation'),
        ),
        migrations.AlterField(
            model_name='tracktallyobservation',
            name='dog_predation',
            field=models.CharField(choices=[('na', 'NA'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Dog predation'),
        ),
        migrations.AlterField(
            model_name='tracktallyobservation',
            name='fox_predation',
            field=models.CharField(choices=[('na', 'NA'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Fox predation'),
        ),
        migrations.AlterField(
            model_name='tracktallyobservation',
            name='goanna_predation',
            field=models.CharField(choices=[('na', 'NA'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Goanna predation'),
        ),
        migrations.AlterField(
            model_name='turtlenestencounter',
            name='habitat',
            field=models.CharField(choices=[('na', 'not observed'), ('beach-below-high-water', 'beach below high water mark'), ('beach-above-high-water', 'beach between high water mark and dune'), ('beach-edge-of-vegetation', 'edge of dune and vegetation'), ('in-dune-vegetation', 'inside dune and vegetation'), ('beach', 'beach (below vegetation line)'), ('bays-estuaries', 'bays, estuaries and other enclosed shallow soft sediments'), ('dune', 'dune'), ('dune-constructed-hard-substrate', 'dune, constructed hard substrate (concrete slabs, timber floors, helipad)'), ('dune-grass-area', 'dune, grass area'), ('dune-compacted-path', 'dune, hard compacted areas (road ways, paths)'), ('dune-rubble', 'dune, rubble, usually coral'), ('dune-bare-sand', 'dune, bare sand area'), ('dune-beneath-vegetation', 'dune, beneath tree or shrub'), ('slope-front-dune', 'dune, front slope'), ('sand-flats', 'sand flats'), ('slope-grass', 'slope, grass area'), ('slope-bare-sand', 'slope, bare sand area'), ('slope-beneath-vegetation', 'slope, beneath tree or shrub'), ('below-mean-spring-high-water-mark', 'below the mean spring high water line or current level of inundation'), ('lagoon-patch-reef', 'lagoon, patch reef'), ('lagoon-open-sand', 'lagoon, open sand areas'), ('mangroves', 'mangroves'), ('reef-coral', 'coral reef'), ('reef-crest-front-slope', 'reef crest (dries at low water) and front reef slope areas'), ('reef-flat', 'reef flat, dries at low tide'), ('reef-seagrass-flats', 'coral reef with seagrass flats'), ('reef-rocky', 'rocky reef'), ('open-water', 'open water')], default='na', help_text='The habitat in which the nest was encountered.', max_length=500, verbose_name='Habitat'),
        ),
        migrations.AlterField(
            model_name='turtlenestobservation',
            name='nest_position',
            field=models.CharField(choices=[('beach-below-high-water', 'beach below high water mark'), ('beach-above-high-water', 'beach between high water mark and dune'), ('beach-edge-of-vegetation', 'edge of dune and vegetation'), ('in-dune-vegetation', 'inside dune and vegetation')], default='unknown', help_text='The position of the nest on the beach.', max_length=300, verbose_name='Beach position'),
        ),
    ]
