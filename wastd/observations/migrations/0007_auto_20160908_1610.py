# -*- coding: utf-8 -*-
# Generated by Django 1.9.9 on 2016-09-08 08:10
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('observations', '0006_auto_20160906_1350'),
    ]

    operations = [
        migrations.AddField(
            model_name='tagobservation',
            name='handler',
            field=models.ForeignKey(blank=True, help_text='The person in physical contact with the tag or sample', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tag_handler', to=settings.AUTH_USER_MODEL, verbose_name='Handled by'),
        ),
        migrations.AddField(
            model_name='tagobservation',
            name='recorder',
            field=models.ForeignKey(blank=True, help_text='The person who records the tag observation', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tag_recorder', to=settings.AUTH_USER_MODEL, verbose_name='Recorded by'),
        ),
        migrations.AlterField(
            model_name='animalencounter',
            name='habitat',
            field=models.CharField(choices=[('na', 'not observed'), ('beach-below-high-water', 'beach (below high water line)'), ('beach-above-high-water', 'beach (above high water line)'), ('beach-edge-spinifex', 'beach (edge of spinifex)'), ('dune-spinifex', 'dune (inside spinifex)'), ('beach', 'beach (below vegetation line)'), ('bays-estuaries', 'bays, estuaries and other enclosed shallow soft sediments'), ('dune', 'dune'), ('dune-constructed-hard-substrate', 'dune, constructed hard substrate (concrete slabs, timber floors, helipad)'), ('dune-grass-area', 'dune, grass area'), ('dune-compacted-path', 'dune, hard compacted areas (road ways, paths)'), ('dune-rubble', 'dune, rubble, usually coral'), ('dune-bare-sand', 'dune, bare sand area'), ('dune-beneath-vegetation', 'dune, beneath tree or shrub'), ('slope-front-dune', 'dune, front slope'), ('sand-flats', 'sand flats'), ('slope-grass', 'slope, grass area'), ('slope-bare-sand', 'slope, bare sand area'), ('slope-beneath-vegetation', 'slope, beneath tree or shrub'), ('below-mean-spring-high-water-mark', 'below the mean spring high water line or current level of inundation'), ('lagoon-patch-reef', 'lagoon, patch reef'), ('lagoon-open-sand', 'lagoon, open sand areas'), ('mangroves', 'mangroves'), ('reef-coral', 'coral reef'), ('reef-crest-front-slope', 'reef crest (dries at low water) and front reef slope areas'), ('reef-flat', 'reef flat, dries at low tide'), ('reef-seagrass-flats', 'coral reef with seagrass flats'), ('reef-rocky', 'rocky reef'), ('open-water', 'open water')], default='na', help_text='The habitat in which the animal was encountered.', max_length=500, verbose_name='Habitat'),
        ),
        migrations.AlterField(
            model_name='distinguishingfeatureobservation',
            name='algal_growth',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Algal growth on carapace'),
        ),
        migrations.AlterField(
            model_name='distinguishingfeatureobservation',
            name='barnacles',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Barnacles'),
        ),
        migrations.AlterField(
            model_name='distinguishingfeatureobservation',
            name='damage_injury',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Obvious damage or injuries'),
        ),
        migrations.AlterField(
            model_name='distinguishingfeatureobservation',
            name='missing_limbs',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Missing limbs'),
        ),
        migrations.AlterField(
            model_name='distinguishingfeatureobservation',
            name='propeller_damage',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Propeller strike damage'),
        ),
        migrations.AlterField(
            model_name='distinguishingfeatureobservation',
            name='scanned_for_pit_tags',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Scanned for PIT tags'),
        ),
        migrations.AlterField(
            model_name='distinguishingfeatureobservation',
            name='tagging_scars',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Tagging scars'),
        ),
        migrations.AlterField(
            model_name='encounter',
            name='observer',
            field=models.ForeignKey(help_text='The person who executes the measurements, source of measurement bias', on_delete=django.db.models.deletion.CASCADE, related_name='observer', to=settings.AUTH_USER_MODEL, verbose_name='Measured by'),
        ),
        migrations.AlterField(
            model_name='encounter',
            name='reporter',
            field=models.ForeignKey(help_text='The person who writes the data sheet in the field, source of handwriting and spelling errors', on_delete=django.db.models.deletion.CASCADE, related_name='reporter', to=settings.AUTH_USER_MODEL, verbose_name='Recorded by'),
        ),
        migrations.AlterField(
            model_name='tagobservation',
            name='status',
            field=models.CharField(choices=[('ordered', 'ordered from manufacturer'), ('produced', 'produced by manufacturer'), ('delivered', 'delivered to HQ'), ('allocated', 'allocated to field team'), ('applied-new', 'applied new, first association with animal'), ('resighted', 're-sighted associated with animal'), ('reclinched', 're-sighted and reclinced on animal'), ('removed', 'taken off animal'), ('found', 'found detached'), ('returned', 'returned to HQ'), ('decommissioned', 'decommissioned'), ('destroyed', 'destroyed'), ('observed', 'observed in any other context, see comments')], default='recaptured', help_text='The status this tag was seen in, or brought into.', max_length=300, verbose_name='Tag status'),
        ),
        migrations.AlterField(
            model_name='tagobservation',
            name='tag_location',
            field=models.CharField(choices=[('head', 'head'), ('eyes', 'eyes'), ('neck', 'neck'), ('plastron', 'plastron'), ('carapace', 'carapace'), ('internals', 'internals'), ('cloaca', 'cloaca'), ('tail', 'tail'), ('flipper-front-left-1', 'front left flipper, 1st scale from body'), ('flipper-front-left-2', 'front left flipper, 2nd scale from body'), ('flipper-front-left-3', 'front left flipper, 3rd scale from body'), ('flipper-front-left', 'front left flipper'), ('flipper-front-right-1', 'front right flipper, 1st scale from body'), ('flipper-front-right-2', 'front right flipper, 2nd scale from body'), ('flipper-front-right-3', 'front right flipper, 3rd scale from body'), ('flipper-front-right', 'front right flipper'), ('flipper-rear-left', 'rear left flipper'), ('flipper-rear-right', 'rear right flipper'), ('shoulder-left', 'left shoulder'), ('shoulder-right', 'right shoulder'), ('whole', 'whole turtle'), ('other', 'Other')], default='whole', help_text='Where is the tag attached, or the sample taken from?', max_length=300, verbose_name='Tag position'),
        ),
        migrations.AlterField(
            model_name='tagobservation',
            name='tag_type',
            field=models.CharField(choices=[('flipper-tag', 'Flipper Tag'), ('pit-tag', 'PIT Tag'), ('satellite-tag', 'Satellite Tag'), ('data-logger', 'Data Logger'), ('blood-sample', 'Blood Sample'), ('biopsy-sample', 'Biopsy Sample'), ('stomach-content-sample', 'Stomach Content Sample'), ('physical-sample', 'Physical Sample'), ('egg-sample', 'Egg Sample'), ('other', 'Other')], default='flipper-tag', help_text='What kind of tag is it?', max_length=300, verbose_name='Tag type'),
        ),
        migrations.AlterField(
            model_name='tracktallyobservation',
            name='bird_predation',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Bird predation'),
        ),
        migrations.AlterField(
            model_name='tracktallyobservation',
            name='croc_predation',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Crocodile predation'),
        ),
        migrations.AlterField(
            model_name='tracktallyobservation',
            name='dingo_predation',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Dingo predation'),
        ),
        migrations.AlterField(
            model_name='tracktallyobservation',
            name='dog_predation',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Dog predation'),
        ),
        migrations.AlterField(
            model_name='tracktallyobservation',
            name='fox_predation',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Fox predation'),
        ),
        migrations.AlterField(
            model_name='tracktallyobservation',
            name='goanna_predation',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Goanna predation'),
        ),
        migrations.AlterField(
            model_name='turtledamageobservation',
            name='body_part',
            field=models.CharField(choices=[('head', 'head'), ('eyes', 'eyes'), ('neck', 'neck'), ('plastron', 'plastron'), ('carapace', 'carapace'), ('internals', 'internals'), ('cloaca', 'cloaca'), ('tail', 'tail'), ('flipper-front-left-1', 'front left flipper, 1st scale from body'), ('flipper-front-left-2', 'front left flipper, 2nd scale from body'), ('flipper-front-left-3', 'front left flipper, 3rd scale from body'), ('flipper-front-left', 'front left flipper'), ('flipper-front-right-1', 'front right flipper, 1st scale from body'), ('flipper-front-right-2', 'front right flipper, 2nd scale from body'), ('flipper-front-right-3', 'front right flipper, 3rd scale from body'), ('flipper-front-right', 'front right flipper'), ('flipper-rear-left', 'rear left flipper'), ('flipper-rear-right', 'rear right flipper'), ('shoulder-left', 'left shoulder'), ('shoulder-right', 'right shoulder'), ('whole', 'whole turtle'), ('other', 'Other')], default='whole-turtle', help_text='The body part affected by the observed damage.', max_length=300, verbose_name='Affected body part'),
        ),
        migrations.AlterField(
            model_name='turtledamageobservation',
            name='damage_type',
            field=models.CharField(choices=[('minor-trauma', 'minor trauma'), ('major-trauma', 'major trauma'), ('tip-amputated', 'tip amputation'), ('amputated-from-nail', 'amputation from nail'), ('amputated-half', 'half amputation'), ('amputated-entirely', 'entire amputation'), ('tag-scar', 'tag scar'), ('tag-seen', 'tag seen but not identified'), ('cuts', 'cuts'), ('deformity', 'deformity'), ('propeller-strike', 'propeller strike'), ('entanglement', 'entanglement'), ('other', 'other')], default='minor-trauma', help_text='The type of the damage.', max_length=300, verbose_name='Damage type'),
        ),
        migrations.AlterField(
            model_name='turtlenestencounter',
            name='habitat',
            field=models.CharField(choices=[('na', 'not observed'), ('beach-below-high-water', 'beach (below high water line)'), ('beach-above-high-water', 'beach (above high water line)'), ('beach-edge-spinifex', 'beach (edge of spinifex)'), ('dune-spinifex', 'dune (inside spinifex)'), ('beach', 'beach (below vegetation line)'), ('bays-estuaries', 'bays, estuaries and other enclosed shallow soft sediments'), ('dune', 'dune'), ('dune-constructed-hard-substrate', 'dune, constructed hard substrate (concrete slabs, timber floors, helipad)'), ('dune-grass-area', 'dune, grass area'), ('dune-compacted-path', 'dune, hard compacted areas (road ways, paths)'), ('dune-rubble', 'dune, rubble, usually coral'), ('dune-bare-sand', 'dune, bare sand area'), ('dune-beneath-vegetation', 'dune, beneath tree or shrub'), ('slope-front-dune', 'dune, front slope'), ('sand-flats', 'sand flats'), ('slope-grass', 'slope, grass area'), ('slope-bare-sand', 'slope, bare sand area'), ('slope-beneath-vegetation', 'slope, beneath tree or shrub'), ('below-mean-spring-high-water-mark', 'below the mean spring high water line or current level of inundation'), ('lagoon-patch-reef', 'lagoon, patch reef'), ('lagoon-open-sand', 'lagoon, open sand areas'), ('mangroves', 'mangroves'), ('reef-coral', 'coral reef'), ('reef-crest-front-slope', 'reef crest (dries at low water) and front reef slope areas'), ('reef-flat', 'reef flat, dries at low tide'), ('reef-seagrass-flats', 'coral reef with seagrass flats'), ('reef-rocky', 'rocky reef'), ('open-water', 'open water')], default='na', help_text='The habitat in which the nest was encountered.', max_length=500, verbose_name='Habitat'),
        ),
    ]
