# -*- coding: utf-8 -*-
# Generated by Django 1.11.12 on 2018-04-13 12:31
from __future__ import unicode_literals

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('observations', '0111_survey_end_device_id'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='animalencounter',
            options={'get_latest_by': 'when', 'ordering': ['when', 'where'], 'verbose_name': 'Animal Encounter', 'verbose_name_plural': 'Animal Encounters'},
        ),
        migrations.AlterModelOptions(
            name='encounter',
            options={'get_latest_by': 'when', 'ordering': ['when', 'where'], 'verbose_name': 'Encounter', 'verbose_name_plural': 'Encounters'},
        ),
        migrations.AlterModelOptions(
            name='linetransectencounter',
            options={'get_latest_by': 'when', 'ordering': ['when', 'where'], 'verbose_name': 'Line Transect Encounter', 'verbose_name_plural': 'Line Transect Encounters'},
        ),
        migrations.AlterModelOptions(
            name='loggerencounter',
            options={'get_latest_by': 'when', 'ordering': ['when', 'where'], 'verbose_name': 'Logger Encounter', 'verbose_name_plural': 'Logger Encounters'},
        ),
        migrations.AlterModelOptions(
            name='mediaattachment',
            options={},
        ),
        migrations.AlterModelOptions(
            name='observation',
            options={},
        ),
        migrations.AlterModelOptions(
            name='turtlenestencounter',
            options={'get_latest_by': 'when', 'ordering': ['when', 'where'], 'verbose_name': 'Turtle Nest Encounter', 'verbose_name_plural': 'Turtle Nest Encounters'},
        ),
        migrations.AlterModelManagers(
            name='animalencounter',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='dispatchrecord',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='dugongmorphometricobservation',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='encounter',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='hatchlingmorphometricobservation',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='linetransectencounter',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='loggerencounter',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='managementaction',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='mediaattachment',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='nesttagobservation',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='observation',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='tagobservation',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='temperatureloggerdeployment',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='temperatureloggersettings',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='tracktallyobservation',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='turtledamageobservation',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='turtlemorphometricobservation',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='turtlenestdisturbanceobservation',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='turtlenestdisturbancetallyobservation',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='turtlenestencounter',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='turtlenestobservation',
            managers=[
            ],
        ),
    ]
