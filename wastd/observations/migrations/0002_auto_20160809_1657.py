# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2016-08-09 08:57
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('observations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TurtleDamageObservation',
            fields=[
                ('observation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='observations.Observation')),
                ('body_part', models.CharField(choices=[('head', 'head'), ('plastron', 'plastron'), ('carapace', 'carapace'), ('tail', 'tail'), ('flipper-front-left', 'front left flipper'), ('flipper-front-right', 'front right flipper'), ('flipper-rear-left', 'rear left flipper'), ('flipper-rear-right', 'rear right flipper'), ('whole-turtle', 'whole turtle')], default='whole-turtle', help_text='The body part affected by the observed damage.', max_length=300, verbose_name='Affected body part')),
                ('damage_type', models.CharField(choices=[('minor-trauma', 'minor trauma'), ('major-trauma', 'major trauma'), ('tip-amputated', 'tip amputation'), ('amputated-from-nail', 'amputation from nail'), ('amputated-half', 'half amputation'), ('amputated-entirely', 'entire amputation'), ('cuts', 'cuts'), ('deformity', 'deformity'), ('propeller-strike', 'propeller strike'), ('entanglement', 'entanglement'), ('other', 'other')], default='minor-trauma', help_text='The type of the damage.', max_length=300, verbose_name='Damage age')),
                ('damage_age', models.CharField(choices=[('healed-entirely', 'entirely healed'), ('healed-partially', 'partially healed'), ('fresh', 'fresh')], default='healed-entirely', help_text='The age of the damage.', max_length=300, verbose_name='Damage age')),
                ('description', models.TextField(blank=True, help_text='A description of the damage.', null=True, verbose_name='Description')),
            ],
            options={
                'abstract': False,
            },
            bases=('observations.observation',),
        ),
        migrations.CreateModel(
            name='TurtleNestEncounter',
            fields=[
                ('encounter_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='observations.Encounter')),
                ('nest_age', models.CharField(choices=[('false-crawl', 'false crawl'), ('nesting-turtle-present', 'new nest, turtle present'), ('fresh', 'new nest, turtle absent'), ('predated', 'nest and eggs destroyed by predator'), ('hatched', 'hatched nest')], default='new', help_text='The nest age and type.', max_length=300, verbose_name='Nest age')),
                ('species', models.CharField(choices=[('Natator depressus', 'Flatback turtle (Natator depressus)'), ('Chelonia mydas', 'Green turtle (Chelonia mydas)'), ('Eretmochelys imbricata', 'Hawksbill turtle (Eretmochelys imbricata)'), ('Caretta caretta', 'Loggerhead turtle (Caretta caretta)'), ('Lepidochelys olivacea', 'Olive Ridley turtle (Lepidochelys olivacea)'), ('Dermochelys coriacea', 'Leatherback turtle (Dermochelys coriacea)'), ('Corolla corolla', 'Hatchback turtle (Corolla corolla)'), ('unidentified', 'Unidentified species'), ('Delphinus delphis', 'Delphinus delphis (Short-beaked common dolphin)'), ('Grampus griseus', "Grampus griseus (Risso's dolphin)"), ('Lagenodelphis hosei', "Lagenodelphis hosei (Fraser's dolphin)"), ('Lagenorhynchus obscurus', 'Lagenorhynchus obscurus (Dusky dolphin)'), ('Orcaella heinsohni', 'Orcaella heinsohni (Australian snubfin dolphin)'), ('Sousa sahulensis', 'Sousa sahulensis (Australian humpback dolphin)'), ('Stenella attenuata', 'Stenella attenuata (Pantropical spotted dolphin)'), ('Stenella coeruleoalba', 'Stenella coeruleoalba (Striped dolphin)'), ('Stenella longirostris', 'Stenella longirostris (Spinner dolphin)'), ('Stenella sp.', 'Stenella sp. (Unidentified spotted dolphin)'), ('Steno bredanensis', 'Steno bredanensis (Rough-toothed dolphin)'), ('Tursiops aduncus', 'Tursiops aduncus (Indo-Pacific bottlenose dolphin)'), ('Tursiops truncatus', 'Tursiops truncatus (Offshore bottlenose dolphin)'), ('Tursiops sp.', 'Tursiops sp. (Unidentified bottlenose dolphin)'), ('unidentified', 'Unidentified species'), ('Balaenoptera acutorostrata', 'Balaenoptera acutorostrata (Dwarf minke whale)'), ('Balaenoptera bonaerensis', 'Balaenoptera bonaerensis (Antarctic minke whale)<'), ('Balaenoptera borealis', 'Balaenoptera borealis (Sei whale)'), ('Balaenoptera edeni', "Balaenoptera edeni (Bryde's whale)"), ('Balaenoptera musculus', 'Balaenoptera musculus (Blue whale)'), ('Balaenoptera musculus brevicauda', 'Balaenoptera musculus brevicauda (Pygmy blue whale)'), ('Balaenoptera physalus', 'Balaenoptera physalus (Fin whale)'), ('Balaenoptera sp.', 'Balaenoptera sp. (Unidentified Balaenoptera)'), ('Eubalaena australis', 'Eubalaena australis (Southern right whale)'), ('Feresa attenuata', 'Feresa attenuata (Pygmy killer whale)'), ('Globicephala macrorhynchus', 'Globicephala macrorhynchus (Short-finned pilot whale)'), ('Globicephala melas', 'Globicephala melas (Long-finned pilot whale)'), ('Globicephala sp.', 'Globicephala sp. (Unidentified pilot whale)'), ('Indopacetus pacificus', "Indopacetus pacificus (Longman's beaked whale)"), ('Kogia breviceps', 'Kogia breviceps (Pygmy sperm whale)'), ('Kogia sima', 'Kogia sima (Dwarf sperm whale)'), ('Kogia sp.', 'Kogia sp. (Unidentified small sperm whale)'), ('Megaptera novaeangliae', 'Megaptera novaeangliae (Humpback whale)'), ('Mesoplodon densirostris', "Mesoplodon densirostris (Blainville's beaked whale)"), ('Mesoplodon layardii', 'Mesoplodon layardii (Strap-toothed whale)'), ('Mesoplodon sp.', 'Mesoplodon sp. (Beaked whale)'), ('Orcinus orca', 'Orcinus orca (Killer whale)'), ('Peponocephala electra', 'Peponocephala electra (Melon-headed whale)'), ('Physeter macrocephalus', 'Physeter macrocephalus (Sperm whale)'), ('Pseudorca crassidens', 'Pseudorca crassidens (False killer whale)'), ('Ziphius cavirostris', "Ziphius cavirostris (Cuvier's beaked whale)")], default='unidentified', help_text='The species of the animal.', max_length=300, verbose_name='Species')),
                ('habitat', models.CharField(choices=[('na', 'No habitat information available'), ('beach', 'B - Beach: Below the vegetation line of the grass slope'), ('bays-estuaries', 'BE - Bays, estuaries and other enclosed shallow soft sediments'), ('dune', 'D - Dune'), ('dune-constructed-hard-substrate', 'DC - Dune: Constructed hard substrate (concrete slabs, timber floors, helipad)'), ('dune-grass-area', 'DG - Dune: Grass area'), ('dune-compacted-path', 'DH - Dune: Hard compacted areas (road ways, paths)'), ('dune-rubble', 'DR - Dune: Rubble, usually coral'), ('dune-bare-sand', 'DS - Dune: Bare sand area'), ('dune-beneath-vegetation', 'DT - Dune: Beneath tree or shrub'), ('slope-front-dune', 'S - Slope: Front slope of dune'), ('sand-flats', 'SF - Sand flats'), ('slope-grass', 'SG - Slope: Grass area'), ('slope-bare-sand', 'SS - Slope: Bare sand area'), ('slope-beneath-vegetation', 'ST - Slope: Beneath tree or shrub'), ('below-mean-spring-high-water-mark', 'HW - Below the mean spring high water line or current level of inundation'), ('lagoon-patch-reef', 'LP - Lagoon: Patch reef'), ('lagoon-open-sand', 'LS - Lagoon: Open sand areas, typically shallow'), ('mangroves', 'M - Mangroves'), ('reef-coral', 'R - Reef: Coral reef'), ('reef-crest-front-slope', 'RC - Reef: Reef crest (dries at low water) and front reef slope areas'), ('reef-flat', 'RF - Reef: Reef flat, dries at low tide'), ('reef-seagrass-flats', 'RG - Coral reef with seagrass flats'), ('reef-rocky', 'RR - Reef: Rocky reef, e.g. adjacent to mainland'), ('open-water', 'OW - Open water, including inter reefal areas')], default='na', help_text='The habitat in which the nest was encountered.', max_length=500, verbose_name='Habitat')),
            ],
            options={
                'ordering': ['when', 'where'],
                'get_latest_by': 'when',
                'verbose_name': 'Turtle Nest Encounter',
                'verbose_name_plural': 'Turtle Nest Encounters',
            },
            bases=('observations.encounter',),
        ),
        migrations.CreateModel(
            name='TurtleNestObservation',
            fields=[
                ('observation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='observations.Observation')),
                ('nest_position', models.CharField(choices=[('below-hwm', 'below high water mark'), ('above-hw', 'above high water mark, below dune'), ('dune-edge', 'edge of dune, beginning of spinifex'), ('in-dune', 'inside dune, spinifex')], default='unknown', help_text='The position of the nest on the beach.', max_length=300, verbose_name='Beach position')),
                ('eggs_laid', models.BooleanField(default=False, help_text="Did round, white objects leave the turtle's butt?", verbose_name='Did the turtle lay eggs?')),
                ('egg_count', models.PositiveIntegerField(blank=True, help_text='The total number of eggs laid.', null=True, verbose_name='Total number of eggs laid')),
            ],
            options={
                'abstract': False,
            },
            bases=('observations.observation',),
        ),
        migrations.RemoveField(
            model_name='turtlenestingobservation',
            name='observation_ptr',
        ),
        migrations.AlterField(
            model_name='animalencounter',
            name='habitat',
            field=models.CharField(choices=[('na', 'No habitat information available'), ('beach', 'B - Beach: Below the vegetation line of the grass slope'), ('bays-estuaries', 'BE - Bays, estuaries and other enclosed shallow soft sediments'), ('dune', 'D - Dune'), ('dune-constructed-hard-substrate', 'DC - Dune: Constructed hard substrate (concrete slabs, timber floors, helipad)'), ('dune-grass-area', 'DG - Dune: Grass area'), ('dune-compacted-path', 'DH - Dune: Hard compacted areas (road ways, paths)'), ('dune-rubble', 'DR - Dune: Rubble, usually coral'), ('dune-bare-sand', 'DS - Dune: Bare sand area'), ('dune-beneath-vegetation', 'DT - Dune: Beneath tree or shrub'), ('slope-front-dune', 'S - Slope: Front slope of dune'), ('sand-flats', 'SF - Sand flats'), ('slope-grass', 'SG - Slope: Grass area'), ('slope-bare-sand', 'SS - Slope: Bare sand area'), ('slope-beneath-vegetation', 'ST - Slope: Beneath tree or shrub'), ('below-mean-spring-high-water-mark', 'HW - Below the mean spring high water line or current level of inundation'), ('lagoon-patch-reef', 'LP - Lagoon: Patch reef'), ('lagoon-open-sand', 'LS - Lagoon: Open sand areas, typically shallow'), ('mangroves', 'M - Mangroves'), ('reef-coral', 'R - Reef: Coral reef'), ('reef-crest-front-slope', 'RC - Reef: Reef crest (dries at low water) and front reef slope areas'), ('reef-flat', 'RF - Reef: Reef flat, dries at low tide'), ('reef-seagrass-flats', 'RG - Coral reef with seagrass flats'), ('reef-rocky', 'RR - Reef: Rocky reef, e.g. adjacent to mainland'), ('open-water', 'OW - Open water, including inter reefal areas')], default='na', help_text='The habitat in which the animal was encountered.', max_length=500, verbose_name='Habitat'),
        ),
        migrations.AlterField(
            model_name='animalencounter',
            name='species',
            field=models.CharField(choices=[('Natator depressus', 'Flatback turtle (Natator depressus)'), ('Chelonia mydas', 'Green turtle (Chelonia mydas)'), ('Eretmochelys imbricata', 'Hawksbill turtle (Eretmochelys imbricata)'), ('Caretta caretta', 'Loggerhead turtle (Caretta caretta)'), ('Lepidochelys olivacea', 'Olive Ridley turtle (Lepidochelys olivacea)'), ('Dermochelys coriacea', 'Leatherback turtle (Dermochelys coriacea)'), ('Corolla corolla', 'Hatchback turtle (Corolla corolla)'), ('unidentified', 'Unidentified species'), ('Delphinus delphis', 'Delphinus delphis (Short-beaked common dolphin)'), ('Grampus griseus', "Grampus griseus (Risso's dolphin)"), ('Lagenodelphis hosei', "Lagenodelphis hosei (Fraser's dolphin)"), ('Lagenorhynchus obscurus', 'Lagenorhynchus obscurus (Dusky dolphin)'), ('Orcaella heinsohni', 'Orcaella heinsohni (Australian snubfin dolphin)'), ('Sousa sahulensis', 'Sousa sahulensis (Australian humpback dolphin)'), ('Stenella attenuata', 'Stenella attenuata (Pantropical spotted dolphin)'), ('Stenella coeruleoalba', 'Stenella coeruleoalba (Striped dolphin)'), ('Stenella longirostris', 'Stenella longirostris (Spinner dolphin)'), ('Stenella sp.', 'Stenella sp. (Unidentified spotted dolphin)'), ('Steno bredanensis', 'Steno bredanensis (Rough-toothed dolphin)'), ('Tursiops aduncus', 'Tursiops aduncus (Indo-Pacific bottlenose dolphin)'), ('Tursiops truncatus', 'Tursiops truncatus (Offshore bottlenose dolphin)'), ('Tursiops sp.', 'Tursiops sp. (Unidentified bottlenose dolphin)'), ('unidentified', 'Unidentified species'), ('Balaenoptera acutorostrata', 'Balaenoptera acutorostrata (Dwarf minke whale)'), ('Balaenoptera bonaerensis', 'Balaenoptera bonaerensis (Antarctic minke whale)<'), ('Balaenoptera borealis', 'Balaenoptera borealis (Sei whale)'), ('Balaenoptera edeni', "Balaenoptera edeni (Bryde's whale)"), ('Balaenoptera musculus', 'Balaenoptera musculus (Blue whale)'), ('Balaenoptera musculus brevicauda', 'Balaenoptera musculus brevicauda (Pygmy blue whale)'), ('Balaenoptera physalus', 'Balaenoptera physalus (Fin whale)'), ('Balaenoptera sp.', 'Balaenoptera sp. (Unidentified Balaenoptera)'), ('Eubalaena australis', 'Eubalaena australis (Southern right whale)'), ('Feresa attenuata', 'Feresa attenuata (Pygmy killer whale)'), ('Globicephala macrorhynchus', 'Globicephala macrorhynchus (Short-finned pilot whale)'), ('Globicephala melas', 'Globicephala melas (Long-finned pilot whale)'), ('Globicephala sp.', 'Globicephala sp. (Unidentified pilot whale)'), ('Indopacetus pacificus', "Indopacetus pacificus (Longman's beaked whale)"), ('Kogia breviceps', 'Kogia breviceps (Pygmy sperm whale)'), ('Kogia sima', 'Kogia sima (Dwarf sperm whale)'), ('Kogia sp.', 'Kogia sp. (Unidentified small sperm whale)'), ('Megaptera novaeangliae', 'Megaptera novaeangliae (Humpback whale)'), ('Mesoplodon densirostris', "Mesoplodon densirostris (Blainville's beaked whale)"), ('Mesoplodon layardii', 'Mesoplodon layardii (Strap-toothed whale)'), ('Mesoplodon sp.', 'Mesoplodon sp. (Beaked whale)'), ('Orcinus orca', 'Orcinus orca (Killer whale)'), ('Peponocephala electra', 'Peponocephala electra (Melon-headed whale)'), ('Physeter macrocephalus', 'Physeter macrocephalus (Sperm whale)'), ('Pseudorca crassidens', 'Pseudorca crassidens (False killer whale)'), ('Ziphius cavirostris', "Ziphius cavirostris (Cuvier's beaked whale)")], default='unidentified', help_text='The species of the animal.', max_length=300, verbose_name='Species'),
        ),
        migrations.AlterField(
            model_name='distinguishingfeatureobservation',
            name='algal_growth',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Algal growth on carapace'),
        ),
        migrations.AlterField(
            model_name='distinguishingfeatureobservation',
            name='barnacles',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Barnacles'),
        ),
        migrations.AlterField(
            model_name='distinguishingfeatureobservation',
            name='damage_injury',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Obvious damage or injuries'),
        ),
        migrations.AlterField(
            model_name='distinguishingfeatureobservation',
            name='missing_limbs',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Missing limbs'),
        ),
        migrations.AlterField(
            model_name='distinguishingfeatureobservation',
            name='propeller_damage',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Propeller strike damage'),
        ),
        migrations.AlterField(
            model_name='distinguishingfeatureobservation',
            name='scanned_for_pit_tags',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Scanned for PIT tags'),
        ),
        migrations.AlterField(
            model_name='distinguishingfeatureobservation',
            name='tagging_scars',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Tagging scars'),
        ),
        migrations.AlterField(
            model_name='tagobservation',
            name='tag_type',
            field=models.CharField(choices=[('flipper-tag', 'Flipper Tag'), ('pit-tag', 'PIT Tag'), ('satellite-tag', 'Satellite Tag'), ('physical-sample', 'Physical Sample'), ('biopsy-sample', 'Biopsy Sample'), ('genetic-fingerprint', 'Genetic Fingerprint (DNA sample)'), ('whisker-id', 'Whisker ID'), ('other', 'Other')], default='flipper-tag', help_text='What kind of tag is it?', max_length=300, verbose_name='Tag type'),
        ),
        migrations.DeleteModel(
            name='TurtleNestingObservation',
        ),
    ]
