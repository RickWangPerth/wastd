# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-10-14 04:23
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('observations', '0035_auto_20161013_1133'),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the area.', max_length=1000, verbose_name='Area Name')),
                ('centroid', django.contrib.gis.db.models.fields.PointField(blank=True, editable=False, help_text='The centroid is a simplified presentation of the Area.', null=True, srid=4326, verbose_name='Centroid')),
                ('northern_extent', models.FloatField(blank=True, editable=False, help_text='The northernmost latitude serves to sort areas.', null=True, verbose_name='Northernmost latitude')),
                ('geom', django.contrib.gis.db.models.fields.PolygonField(help_text='The exact extent of the area as polygon in WGS84.', srid=4326, verbose_name='Observed at')),
            ],
            options={
                'ordering': ['northern_extent', 'name'],
                'verbose_name': 'Area',
                'verbose_name_plural': 'Areas',
            },
        ),
        migrations.CreateModel(
            name='AreaType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A concise term for the area type.', max_length=1000, verbose_name='Area Type')),
                ('definition', models.TextField(blank=True, help_text='A comprehensive definition of the area type.', null=True, verbose_name='Definition')),
            ],
        ),
        migrations.AlterField(
            model_name='animalencounter',
            name='cause_of_death',
            field=models.CharField(choices=[('na', 'not observed'), ('indeterminate-decomposed', 'Indeterminate due to decomposition'), ('boat-strike', 'Boat strike'), ('drowned-entangled-fisheries', 'Drowned entangled in fisheries equipment'), ('drowned-entangled-infrastructure', 'Drowned entangled in infrastructure'), ('drowned-entangled-debris', 'Drowned entangled in debris'), ('drowned-entangled', 'Drowned entangled'), ('drowned-other', 'Drowned'), ('fishery-bycatch', 'Fishery bycatch'), ('handling-accident', 'Handling accident'), ('car-collision', 'Car collision'), ('ingested-debris', 'Ingested debris'), ('harvest', 'Harvested for human consumption'), ('poisoned', 'Poisoned'), ('misorientation', 'Misorientation on beach'), ('natural', 'Natural death'), ('euthanasia', 'Euthanasia'), ('predation', 'Predation')], default='na', help_text='If dead, is the case of death known?', max_length=300, verbose_name='Cause of death'),
        ),
        migrations.AlterField(
            model_name='temperatureloggersettings',
            name='logging_interval',
            field=models.DurationField(blank=True, help_text='The time between individual readings as python timedelta string. E.g, 1h is `01:00:00`; 1 day is `1 00:00:00`.', null=True, verbose_name='Logging interval'),
        ),
        migrations.AlterField(
            model_name='tracktallyobservation',
            name='bird_predation',
            field=models.CharField(choices=[('na', 'NA'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Bird predation'),
        ),
        migrations.AlterField(
            model_name='tracktallyobservation',
            name='croc_predation',
            field=models.CharField(choices=[('na', 'NA'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Crocodile predation'),
        ),
        migrations.AlterField(
            model_name='tracktallyobservation',
            name='dingo_predation',
            field=models.CharField(choices=[('na', 'NA'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Dingo predation'),
        ),
        migrations.AlterField(
            model_name='tracktallyobservation',
            name='dog_predation',
            field=models.CharField(choices=[('na', 'NA'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Dog predation'),
        ),
        migrations.AlterField(
            model_name='tracktallyobservation',
            name='fox_predation',
            field=models.CharField(choices=[('na', 'NA'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Fox predation'),
        ),
        migrations.AlterField(
            model_name='tracktallyobservation',
            name='goanna_predation',
            field=models.CharField(choices=[('na', 'NA'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Goanna predation'),
        ),
        migrations.AddField(
            model_name='area',
            name='area_type',
            field=models.ForeignKey(help_text='The area type.', on_delete=django.db.models.deletion.CASCADE, related_name='area_type', to='observations.AreaType', verbose_name='Area Type'),
        ),
    ]
