# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2016-08-06 06:46
from __future__ import unicode_literals

from django.db import migrations, models
import django_fsm


class Migration(migrations.Migration):

    dependencies = [
        ('observations', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='encounter',
            name='status',
            field=django_fsm.FSMField(choices=[('new', 'New'), ('proofread', 'Proofread'), ('curated', 'Curated'), ('published', 'Published')], default='new', max_length=50, verbose_name='QA Status'),
        ),
        migrations.AlterField(
            model_name='animalencounter',
            name='maturity',
            field=models.CharField(choices=[('hatchling', 'hatchling'), ('juvenile', 'juvenile'), ('adult', 'adult'), ('unknown', 'unknown maturity')], default='unknown', help_text="The animal's maturity.", max_length=300, verbose_name='Maturity'),
        ),
        migrations.AlterField(
            model_name='animalencounter',
            name='sex',
            field=models.CharField(choices=[('male', 'male'), ('female', 'female'), ('unknown', 'sex not determined or not examined'), ('intersex', 'hermaphrodite or intersex')], default='unknown', help_text="The animal's sex.", max_length=300, verbose_name='Sex'),
        ),
        migrations.AlterField(
            model_name='animalencounter',
            name='species',
            field=models.CharField(choices=[('Natator depressus', 'Flatback turtle (Natator depressus)'), ('Chelonia mydas', 'Green turtle (Chelonia mydas)'), ('Eretmochelys imbricata', 'Hawksbill turtle (Eretmochelys imbricata)'), ('Caretta caretta', 'Loggerhead turtle (Caretta caretta)'), ('Lepidochelys olivacea', 'Olive Ridley turtle (Lepidochelys olivacea)'), ('Dermochelys coriacea', 'Leatherback turtle (Dermochelys coriacea)'), ('unidentified', 'Unidentified species')], default='unidentified', help_text='The species of the animal.', max_length=300, verbose_name='Species'),
        ),
        migrations.AlterField(
            model_name='distinguishingfeatureobservation',
            name='algal_growth',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Algal growth on carapace'),
        ),
        migrations.AlterField(
            model_name='distinguishingfeatureobservation',
            name='barnacles',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Barnacles'),
        ),
        migrations.AlterField(
            model_name='distinguishingfeatureobservation',
            name='damage_injury',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Obvious damage or injuries'),
        ),
        migrations.AlterField(
            model_name='distinguishingfeatureobservation',
            name='missing_limbs',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Missing limbs'),
        ),
        migrations.AlterField(
            model_name='distinguishingfeatureobservation',
            name='propeller_damage',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Propeller strike damage'),
        ),
        migrations.AlterField(
            model_name='distinguishingfeatureobservation',
            name='tagging_scars',
            field=models.CharField(choices=[('na', 'Not observed'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Tagging scars'),
        ),
        migrations.AlterField(
            model_name='flippertagobservation',
            name='position',
            field=models.CharField(choices=[('1', '1st scale from body'), ('2', '2nd scale from body'), ('3', '3rd scale from body')], default='1', help_text='Counting from inside, to which flipper scale is the tag attached?', max_length=300, verbose_name='Tag position'),
        ),
        migrations.AlterField(
            model_name='flippertagobservation',
            name='side',
            field=models.CharField(choices=[('L', 'left front flipper'), ('R', 'right front flipper')], default='L', help_text='Is the tag on the left or right front flipper?', max_length=300, verbose_name='Tag side'),
        ),
        migrations.AlterField(
            model_name='flippertagobservation',
            name='status',
            field=models.CharField(choices=[('ordered', 'ordered from manufacturer'), ('produced', 'produced by manufacturer'), ('delivered', 'delivered to HQ'), ('allocated', 'allocated to field team'), ('attached', 'attached new to an animal'), ('recaptured', 're-sighted as attached to animal'), ('detached', 'raken off an animal'), ('found', 'found detached'), ('returned', 'returned to HQ'), ('decommissioned', 'decommissioned from active tag pool'), ('destroyed', 'destroyed'), ('observed', 'observed in any other context, see comments')], default='recaptured', help_text='The status this tag was seen in, or brought into.', max_length=300, verbose_name='Tag status'),
        ),
    ]
