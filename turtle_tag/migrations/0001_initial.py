# Generated by Django 3.2.18 on 2023-03-20 05:00

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=128)),
                ('nesting', models.CharField(max_length=128)),
                ('new_code', models.CharField(blank=True, max_length=255, null=True)),
                ('display_observation', models.BooleanField()),
            ],
            options={
                'verbose_name_plural': 'activities',
            },
        ),
        migrations.CreateModel(
            name='BeachPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=128)),
                ('new_code', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='EntryBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_date', models.DateField(blank=True, null=True)),
                ('filename', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('pr_date_convention', models.BooleanField()),
                ('entered_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'entry batches',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('rookery', models.BooleanField(null=True)),
                ('beach_approach', models.CharField(blank=True, max_length=50, null=True)),
                ('aspect', models.CharField(blank=True, max_length=3, null=True)),
                ('point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('comments', models.TextField(blank=True, null=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='places', to='turtle_tag.location')),
            ],
        ),
        migrations.CreateModel(
            name='TagOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=64)),
                ('order_date', models.DateField(blank=True, null=True)),
                ('tag_prefix', models.CharField(blank=True, max_length=16, null=True)),
                ('start_tag_number', models.IntegerField(blank=True, null=True)),
                ('end_tag_number', models.IntegerField(blank=True, null=True)),
                ('total_tags', models.IntegerField(blank=True, null=True)),
                ('date_received', models.DateField(blank=True, null=True)),
                ('paid_by', models.CharField(blank=True, max_length=128, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Turtle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identification_confidence', models.CharField(blank=True, max_length=1, null=True)),
                ('sex', models.CharField(choices=[('F', 'Female'), ('M', 'Male'), ('U', 'Unknown')], max_length=1)),
                ('cause_of_death', models.CharField(blank=True, choices=[('BS', 'Boat strike'), ('DR', 'Drowning'), ('FI', 'Fishery'), ('HA', 'Handling accident'), ('IH', 'Indigenous hunt'), ('MO', 'Misorientation on beach'), ('NC', 'Natural causes'), ('SH', 'Shark predation'), ('UK', 'Unknown')], max_length=2, null=True)),
                ('re_entered_population', models.CharField(blank=True, max_length=1, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('entered_by', models.CharField(blank=True, max_length=50, null=True)),
                ('date_entered', models.DateField(blank=True, null=True)),
                ('original_turtle_id', models.IntegerField(blank=True, null=True)),
                ('entry_batch_id', models.IntegerField(blank=True, null=True)),
                ('tag', models.CharField(blank=True, max_length=255, null=True)),
                ('mund_id', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='turtles', to='turtle_tag.location')),
            ],
        ),
        migrations.CreateModel(
            name='TurtleSpecies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scientific_name', models.CharField(max_length=128, unique=True)),
                ('common_name', models.CharField(blank=True, max_length=128, null=True)),
                ('old_species_code', models.CharField(blank=True, max_length=2, null=True)),
                ('hide_dataentry', models.BooleanField()),
            ],
            options={
                'verbose_name_plural': 'turtle species',
            },
        ),
        migrations.CreateModel(
            name='TurtleStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=128)),
                ('new_tag_list', models.BooleanField()),
            ],
            options={
                'verbose_name_plural': 'turtle statuses',
            },
        ),
        migrations.CreateModel(
            name='TurtleTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial', models.CharField(max_length=64, unique=True)),
                ('issue_location', models.CharField(blank=True, max_length=128, null=True)),
                ('status', models.CharField(blank=True, choices=[('0BRK', '0 BRK - Tag Broken'), ('1DD', '1 DUD - Tag U/s'), ('2DB', '2 DUDB - Tag U/s break'), ('3DC', '3 DUDC - Clinch NO turtle'), ('4DM', '4 DUDM - Mfr error'), ('5DROP', '5 DROP - Lost on beach'), ('6NAD', '6 NOAD - Mfr error'), ('7NSP', '7 NOSP - Supply error'), ('8YY', 'Tag unknown fate'), ('ATT', 'Tag attached to turtle'), ('DET', 'Tag taken from dead turtle'), ('LOST', 'Tag Lost off turtle'), ('Nil', 'No tag applied'), ('POOR', 'Poor fix on turtle'), ('QRY', 'Unknown if tag present'), ('RCL', 'Tag reclinched at Obs'), ('RFX', 'Tag refixed at Obs'), ('RMVD', 'Tag removed ex live turtle'), ('SAL', 'Salvage for reuse'), ('U', 'Unused Tag')], max_length=16, null=True)),
                ('return_date', models.DateField(blank=True, null=True)),
                ('return_condition', models.CharField(blank=True, max_length=128, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('side', models.CharField(blank=True, max_length=1, null=True)),
                ('custodian', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tag_custodian', to=settings.AUTH_USER_MODEL)),
                ('field_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tag_field_person', to=settings.AUTH_USER_MODEL)),
                ('tag_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='turtle_tag.tagorder')),
                ('turtle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='tags', to='turtle_tag.turtle')),
            ],
        ),
        migrations.CreateModel(
            name='TurtlePitTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial', models.CharField(max_length=64, unique=True)),
                ('issue_location', models.CharField(blank=True, max_length=128, null=True)),
                ('status', models.CharField(blank=True, choices=[('1DD', '1 DUD - Tag U/s'), ('2DB', '2 DUDB - Tag U/s break'), ('3DC', '3 DUDC - Clinch not on turtle'), ('4DM', '4 DUDM - Mfr error'), ('5DROP', '5 DROP - Lost on beach'), ('8YY', 'Tag unknown fate'), ('ATT', 'Tag attached to turtle - Read OK'), ('DET', 'Tag taken from dead turtle'), ('Nil', 'No tag applied'), ('POOR', 'Applied new - Did not read'), ('QRY', 'Unknown if PIT present'), ('RMVD', 'Tag removed ex live turtle'), ('SAL', 'Salvaged'), ('U', 'Unused PIT')], max_length=16, null=True)),
                ('return_date', models.DateField(blank=True, null=True)),
                ('return_condition', models.CharField(blank=True, max_length=128, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('batch_number', models.CharField(blank=True, max_length=128, null=True)),
                ('box_number', models.CharField(blank=True, max_length=128, null=True)),
                ('custodian', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pit_tag_custodian', to=settings.AUTH_USER_MODEL)),
                ('field_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pit_tag_field_person', to=settings.AUTH_USER_MODEL)),
                ('tag_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='turtle_tag.tagorder')),
                ('turtle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pit_tags', to='turtle_tag.turtle')),
            ],
        ),
        migrations.CreateModel(
            name='TurtleObservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation_datetime', models.DateTimeField()),
                ('observation_date_old', models.DateField(blank=True, null=True)),
                ('alive', models.BooleanField(null=True)),
                ('place_description', models.TextField(blank=True, null=True)),
                ('point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('condition', models.CharField(blank=True, choices=[('D', 'Carcase - decomposed'), ('F', 'Carcase - fresh'), ('G', 'Good - fat'), ('H', 'Live & fit'), ('I', 'Injured but OK'), ('M', 'Moribund'), ('P', 'Poor - thin'), ('U', 'Floater - unable to dive')], max_length=1, null=True)),
                ('nesting', models.BooleanField(null=True)),
                ('clutch_completed', models.CharField(blank=True, max_length=1, null=True)),
                ('number_of_eggs', models.IntegerField(blank=True, null=True)),
                ('egg_count_method', models.CharField(blank=True, choices=[('1Dr', 'Obs drop on laying'), ('2Ex', 'Exc & count post-lay'), ('3PH', 'Post-hatch nest exhumation')], max_length=3, null=True)),
                ('measurements', models.CharField(max_length=1)),
                ('action_taken', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('entered_by', models.CharField(blank=True, max_length=50, null=True)),
                ('date_entered', models.DateField(blank=True, null=True)),
                ('original_observation_id', models.IntegerField(blank=True, null=True)),
                ('comment_fromrecordedtagstable', models.TextField(blank=True, null=True)),
                ('scars_left', models.BooleanField()),
                ('scars_right', models.BooleanField()),
                ('other_tags', models.TextField(blank=True, null=True)),
                ('other_tags_identification_type', models.CharField(blank=True, choices=[('A', 'Qld - monel A series tag'), ('Acoustic', 'Acoustic'), ('ATLANTIS', 'Atlantis [now closed]'), ('CA', 'CofAust - titanium tag'), ('CT', 'Cayman - juvenile tag'), ('CTD', 'Conductivity - Temp - Depth SRDL'), ('ENT/REL', 'Untagged turtle - live release from entanglement'), ('ENT/SAL', 'Untagged turtle - salvage from entanglement'), ('FISH/DECD', 'Untagged turtle - Fishery capture victim'), ('FREE/OBS', 'Untagged turtle - live obs'), ('I', 'HIMB - Inconel tag'), ('K', 'Qld - titanium K series tag'), ('PTT', 'PT transmitter'), ('PZ ID', 'Perth Zoo Vets - case ID'), ('RREC', 'Naragebup rehab'), ('SFU/FIU', 'RotoTag'), ('SRDL', 'Satellite Relay Data Logger (SRDL)/?CATS-SATags'), ('STRAND/SAL', 'Untagged turtle - stranding victim'), ('T', 'Qld - titanium T series tag'), ('UWW', 'Underwater World [now AQWA]'), ('WAMusR', 'WA Museum R#')], max_length=10, null=True)),
                ('transferid', models.IntegerField(blank=True, null=True)),
                ('mund', models.BooleanField()),
                ('scars_left_scale_1', models.BooleanField()),
                ('scars_left_scale_2', models.BooleanField()),
                ('scars_left_scale_3', models.BooleanField()),
                ('scars_right_scale_1', models.BooleanField()),
                ('scars_right_scale_2', models.BooleanField()),
                ('scars_right_scale_3', models.BooleanField()),
                ('cc_length_not_measured', models.BooleanField()),
                ('cc_notch_length_not_measured', models.BooleanField()),
                ('cc_width_not_measured', models.BooleanField()),
                ('tagscarnotchecked', models.BooleanField()),
                ('didnotcheckforinjury', models.BooleanField()),
                ('date_convention', models.CharField(max_length=1)),
                ('observation_status', models.CharField(blank=True, max_length=128, null=True)),
                ('corrected_date', models.DateField(blank=True, null=True)),
                ('activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='turtle_tag.activity')),
                ('beach_position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='turtle_tag.beachposition')),
                ('entered_by_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='entered_by', to=settings.AUTH_USER_MODEL)),
                ('entry_batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='turtle_tag.entrybatch')),
                ('measurer_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='measurer', to=settings.AUTH_USER_MODEL)),
                ('measurer_reporter_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='measurer_reporter', to=settings.AUTH_USER_MODEL)),
                ('place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='turtle_tag.place')),
                ('reporter_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reporter', to=settings.AUTH_USER_MODEL)),
                ('tagger_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tagger', to=settings.AUTH_USER_MODEL)),
                ('turtle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='turtle_tag.turtle')),
            ],
        ),
        migrations.AddField(
            model_name='turtle',
            name='species',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='turtle_tag.turtlespecies'),
        ),
        migrations.AddField(
            model_name='turtle',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='turtle_tag.turtlestatus'),
        ),
    ]
