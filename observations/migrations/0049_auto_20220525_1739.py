# Generated by Django 3.2.13 on 2022-05-25 09:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0008_auto_20220505_1107'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('observations', '0048_auto_20220524_1630'),
    ]

    operations = [
        migrations.AlterField(
            model_name='turtlehatchlingemergenceobservation',
            name='light_sources_present',
            field=models.CharField(choices=[('na', 'NA'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Light sources present during emergence'),
        ),
        migrations.AlterField(
            model_name='turtlehatchlingemergenceobservation',
            name='outlier_tracks_present',
            field=models.CharField(choices=[('na', 'NA'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Outlier tracks present'),
        ),
        migrations.AlterField(
            model_name='turtlehatchlingemergenceoutlierobservation',
            name='outlier_group_size',
            field=models.PositiveIntegerField(blank=True, help_text='', null=True, verbose_name='Number of tracks in outlier group'),
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(blank=True, help_text='The Campaign start, shown as local time (no daylight savings), stored as UTC.', null=True, verbose_name='Campaign start')),
                ('end_time', models.DateTimeField(blank=True, help_text='The Campaign end, shown as local time (no daylight savings), stored as UTC.', null=True, verbose_name='Campaign end')),
                ('comments', models.TextField(blank=True, help_text='Comments about the Campaign.', null=True, verbose_name='Comments')),
                ('destination', models.ForeignKey(blank=True, help_text='The surveyed Locality.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaigns', to='observations.area', verbose_name='Destination')),
                ('owner', models.ForeignKey(blank=True, help_text='The organisation that ran this Campaign owns all records (Surveys and Encounters).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaigns', to='users.organisation', verbose_name='Owner')),
                ('team', models.ManyToManyField(blank=True, related_name='campaign_team', to=settings.AUTH_USER_MODEL)),
                ('viewers', models.ManyToManyField(blank=True, help_text="The nominated organisations are able to view the Campaign's records.", related_name='shared_campaigns', to='users.Organisation')),
            ],
        ),
    ]
