# Generated by Django 3.1.7 on 2021-03-29 04:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('observations', '0034_auto_20210224_1538'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='surveyend',
            options={'ordering': ['end_location', 'end_time'], 'verbose_name': 'Survey', 'verbose_name_plural': 'Surveys'},
        ),
        migrations.RemoveField(
            model_name='turtlenestobservation',
            name='nest_position',
        ),
        migrations.AlterField(
            model_name='encounter',
            name='observer',
            field=models.ForeignKey(default=1, help_text='The person who encountered the subject, and executed any measurements. The observer is the source of measurement bias.', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='encounters_observed', to=settings.AUTH_USER_MODEL, verbose_name='Observed by'),
        ),
        migrations.AlterField(
            model_name='encounter',
            name='reporter',
            field=models.ForeignKey(default=1, help_text='The person who wrote the initial data sheet in the field. The reporter is the source of handwriting and spelling errors. ', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='encounters_reported', to=settings.AUTH_USER_MODEL, verbose_name='Recorded by'),
        ),
        migrations.AlterField(
            model_name='observation',
            name='encounter',
            field=models.ForeignKey(help_text='The Encounter during which the observation was made', on_delete=django.db.models.deletion.CASCADE, related_name='observations', to='observations.encounter', verbose_name='Encounter'),
        ),
        migrations.AlterField(
            model_name='observation',
            name='source_id',
            field=models.CharField(default=uuid.UUID('26c28b24-9044-11eb-a693-dd293f642484'), help_text='The ID of the record in the original source, if available.', max_length=1000, verbose_name='Source ID'),
        ),
        migrations.AlterField(
            model_name='survey',
            name='reporter',
            field=models.ForeignKey(blank=True, default=1, help_text='The person who captured the start point, ideally this person also recoreded the encounters and end point.', null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='reported_surveys', to=settings.AUTH_USER_MODEL, verbose_name='Recorded by'),
        ),
        migrations.AlterField(
            model_name='surveymediaattachment',
            name='source_id',
            field=models.CharField(default=uuid.UUID('26c28b24-9044-11eb-a693-dd293f642484'), help_text='The ID of the record in the original source, if available.', max_length=1000, verbose_name='Source ID'),
        ),
        migrations.AlterField(
            model_name='turtlehatchlingemergenceobservation',
            name='light_sources_present',
            field=models.CharField(choices=[('na', 'NA'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Light sources present during emergence'),
        ),
        migrations.AlterField(
            model_name='turtlehatchlingemergenceobservation',
            name='outlier_tracks_present',
            field=models.CharField(choices=[('na', 'NA'), ('absent', 'Confirmed absent'), ('present', 'Confirmed present')], default='na', help_text='', max_length=300, verbose_name='Outlier tracks present'),
        ),
        migrations.AlterField(
            model_name='turtlehatchlingemergenceoutlierobservation',
            name='outlier_group_size',
            field=models.PositiveIntegerField(blank=True, help_text='', null=True, verbose_name='Number of tracks in outlier group'),
        ),
        migrations.AlterField(
            model_name='turtlenestobservation',
            name='eggs_laid',
            field=models.BooleanField(default=False, verbose_name='Did the turtle lay eggs?'),
        ),
    ]
