# Generated by Django 3.2.20 on 2023-07-10 06:14

from django.db import migrations, models
import django_fsm


class Migration(migrations.Migration):

    dependencies = [
        ('observations', '0003_auto_20230706_0935'),
    ]

    operations = [
        migrations.AlterField(
            model_name='animalencounter',
            name='activity',
            field=models.CharField(choices=[('na', 'not observed'), ('arriving', 'Arriving on beach'), ('approaching', 'Approaching nesting site'), ('digging-body-pit', 'Digging body pit'), ('excavating-egg-chamber', 'Excavating egg chamber'), ('laying-eggs', 'Laying eggs'), ('filling-in-egg-chamber', 'Filling in egg chamber'), ('filling-in-nest', 'Filling in nest'), ('camouflaging-nest', 'Camouflaging nest'), ('returning-to-water', 'Returning to water'), ('general-breeding-activity', 'General breeding activity'), ('floating', 'Floating (dead, sick, unable to dive, drifting in water)'), ('beach-washed', 'Beach washed (dead, sick or stranded on beach/coast)'), ('beach-jumped', 'Beach jumped'), ('carcass-tagged-released', 'Carcass tagged and released'), ('carcass-inland', 'Carcass or butchered remains found removed from coast'), ('captivity', 'In captivity'), ('non-breeding', 'Non-breeding activity (swimming, sleeping, feeding, etc.)'), ('other', 'Other activity')], default='na', help_text="The animal's activity at the time of observation.", max_length=300, verbose_name='Activity'),
        ),
        migrations.AlterField(
            model_name='animalencounter',
            name='habitat',
            field=models.CharField(choices=[('na', 'Unknown habitat'), ('beach-below-high-water', 'Beach below high water mark'), ('beach-above-high-water', 'Beach above high water mark and dune'), ('beach-edge-of-vegetation', 'Edge of vegetation'), ('in-dune-vegetation', 'Inside vegetation'), ('beach', 'Beach (below vegetation line)'), ('bays-estuaries', 'Bays, estuaries and other enclosed shallow soft sediments'), ('dune', 'Dune'), ('dune-constructed-hard-substrate', 'Dune, constructed hard substrate (concrete slabs, timber floors, helipad)'), ('dune-grass-area', 'Dune, grass area'), ('dune-compacted-path', 'Dune, hard compacted areas (road ways, paths)'), ('dune-rubble', 'Dune, rubble, usually coral'), ('dune-bare-sand', 'Dune, bare sand area'), ('dune-beneath-vegetation', 'Dune, beneath tree or shrub'), ('slope-front-dune', 'Dune, front slope'), ('sand-flats', 'Sand flats'), ('slope-grass', 'Slope, grass area'), ('slope-bare-sand', 'Slope, bare sand area'), ('slope-beneath-vegetation', 'Slope, beneath tree or shrub'), ('below-mean-spring-high-water-mark', 'Below the mean spring high water line or current level of inundation (old db value)'), ('below-mshwm', 'Below the mean spring high water line or current level of inundation'), ('lagoon-patch-reef', 'Lagoon, patch reef'), ('lagoon-open-sand', 'Lagoon, open sand areas'), ('mangroves', 'Mangroves'), ('reef-coral', 'Coral reef'), ('reef-crest-front-slope', 'Reef crest (dries at low water) and front reef slope areas'), ('reef-flat', 'Reef flat, dries at low tide'), ('reef-seagrass-flats', 'Coral reef with seagrass flats'), ('reef-rocky', 'Rocky reef'), ('open-water', 'Open water'), ('harbour', 'Harbour'), ('boat-ramp', 'Boat ramp')], default='na', help_text='The habitat in which the animal was encountered.', max_length=500, verbose_name='Habitat'),
        ),
        migrations.AlterField(
            model_name='animalencounter',
            name='maturity',
            field=models.CharField(choices=[('na', 'Unknown maturity'), ('hatchling', 'Hatchling'), ('post-hatchling', 'Post-hatchling'), ('juvenile', 'Juvenile'), ('pre-pubsecent-immature', 'Pre-pubsecent immature'), ('pubsecent-immature', 'Pubsecent immature'), ('sub-adult', 'Sub-adult'), ('adult-measured', 'Adult (status determined from carapace and tail measurements)'), ('unweaned', 'Unweaned immature'), ('weaned', 'Weaned immature'), ('adult', 'Adult')], default='na', help_text="The animal's maturity.", max_length=300, verbose_name='Maturity'),
        ),
        migrations.AlterField(
            model_name='animalencounter',
            name='sex',
            field=models.CharField(choices=[('na', 'NA sex'), ('unknown', 'Unknown sex'), ('male', 'Male'), ('female', 'Female'), ('intersex', 'Hermaphrodite or intersex')], default='na', help_text="The animal's sex.", max_length=300, verbose_name='Sex'),
        ),
        migrations.AlterField(
            model_name='animalencounter',
            name='taxon',
            field=models.CharField(choices=[('na', 'not observed'), ('Cheloniidae', 'Marine turtles'), ('Cetacea', 'Whales and Dolphins'), ('Pinnipedia', 'Seals'), ('Sirenia', 'Dugongs'), ('Elasmobranchii', 'Sharks and Rays'), ('Hydrophiinae', 'Sea snakes and kraits')], default='Cheloniidae', help_text='The taxonomic group of the animal.', max_length=300, verbose_name='Taxonomic group'),
        ),
        migrations.AlterField(
            model_name='survey',
            name='status',
            field=django_fsm.FSMField(choices=[('new', 'New'), ('imported', 'Imported'), ('manual input', 'Manual input'), ('proofread', 'Proofread'), ('curated', 'Curated'), ('published', 'Published'), ('flagged', 'Flagged'), ('rejected', 'Rejected')], default='new', max_length=50, verbose_name='QA Status'),
        ),
        migrations.AlterField(
            model_name='tagobservation',
            name='status',
            field=models.CharField(choices=[('ordered', 'Ordered from manufacturer'), ('produced', 'Produced by manufacturer'), ('delivered', 'Delivered to HQ'), ('allocated', 'Allocated to field team'), ('applied-new', 'Applied new'), ('resighted', 'Re-sighted associated with animal'), ('reclinched', 'Re-sighted and reclinched on animal'), ('removed', 'Taken off animal'), ('found', 'Found detached'), ('returned', 'Returned to HQ'), ('decommissioned', 'Decommissioned'), ('destroyed', 'Destroyed'), ('observed', 'Observed in any other context, see comments')], default='resighted', help_text='The status this tag was after the encounter.', max_length=300, verbose_name='Tag status'),
        ),
        migrations.AlterField(
            model_name='tagobservation',
            name='tag_location',
            field=models.CharField(choices=[('head', 'Head'), ('eyes', 'Eyes'), ('neck', 'Neck'), ('plastron', 'Plastron'), ('carapace', 'Carapace'), ('internals', 'Internal organs'), ('cloaca', 'Cloaca'), ('tail', 'Tail'), ('flipper-front-left-1', 'Front left flipper, 1st scale from body'), ('flipper-front-left-2', 'Front left flipper, 2nd scale from body'), ('flipper-front-left-3', 'Front left flipper, 3rd scale from body'), ('flipper-front-left', 'Front left flipper'), ('flipper-front-right-1', 'Front right flipper, 1st scale from body'), ('flipper-front-right-2', 'Front right flipper, 2nd scale from body'), ('flipper-front-right-3', 'Front right flipper, 3rd scale from body'), ('flipper-front-right', 'Front right flipper'), ('flipper-rear-left', 'Fear left flipper'), ('flipper-rear-right', 'Fear right flipper'), ('shoulder-left', 'Left shoulder'), ('shoulder-right', 'Right shoulder'), ('whole', 'Whole turtle'), ('other', 'Other')], default='whole', help_text='Where is the tag attached, or the sample taken from?', max_length=300, verbose_name='Tag position'),
        ),
        migrations.AlterField(
            model_name='tagobservation',
            name='tag_type',
            field=models.CharField(choices=[('flipper-tag', 'Flipper tag'), ('tag-scar', 'Tag scar'), ('pit-tag', 'PIT tag'), ('sat-tag', 'Satellite relay data logger'), ('blood-sample', 'Blood sample'), ('biopsy-sample', 'Biopsy sample'), ('stomach-content-sample', 'Stomach content sample'), ('physical-sample', 'Physical sample'), ('egg-sample', 'Egg sample'), ('qld-monel-a-flipper-tag', 'QLD Monel Series A flipper tag'), ('qld-titanium-k-flipper-tag', 'QLD Titanium Series K flipper tag'), ('qld-titanium-t-flipper-tag', 'QLD Titanium Series T flipper tag'), ('acoustic-tag', 'Acoustic tag'), ('commonwealth-titanium-flipper-tag', 'Commonwealth titanium flipper tag (old db value)'), ('cmlth-titanium-flipper-tag', 'Commonwealth titanium flipper tag'), ('cayman-juvenile-tag', 'Cayman juvenile tag'), ('hawaii-inconel-flipper-tag', 'Hawaii Inst Mar Biol Inconel tag'), ('ptt', 'Platform Transmitter Terminal (PTT)'), ('rototag', 'RotoTag'), ('narangebub-nickname', 'Narangebup rehab informal name'), ('aqwa-nickname', 'AQWA informal name'), ('atlantis-nickname', 'Atlantis informal name'), ('wa-museum-reptile-registration-number', 'WA Museum Natural History Reptiles Catalogue Registration Number (old db value)'), ('wam-reptile-registration-number', 'WA Museum Natural History Reptiles Catalogue Registration Number'), ('genetic-tag', 'Genetic ID sequence'), ('other', 'Other')], default='flipper-tag', help_text='What kind of tag is it?', max_length=300, verbose_name='Tag type'),
        ),
        migrations.AlterField(
            model_name='temperatureloggerdeployment',
            name='habitat',
            field=models.CharField(choices=[('na', 'Unknown habitat'), ('beach-below-high-water', 'Beach below high water mark'), ('beach-above-high-water', 'Beach above high water mark and dune'), ('beach-edge-of-vegetation', 'Edge of vegetation'), ('in-dune-vegetation', 'Inside vegetation'), ('beach', 'Beach (below vegetation line)'), ('bays-estuaries', 'Bays, estuaries and other enclosed shallow soft sediments'), ('dune', 'Dune'), ('dune-constructed-hard-substrate', 'Dune, constructed hard substrate (concrete slabs, timber floors, helipad)'), ('dune-grass-area', 'Dune, grass area'), ('dune-compacted-path', 'Dune, hard compacted areas (road ways, paths)'), ('dune-rubble', 'Dune, rubble, usually coral'), ('dune-bare-sand', 'Dune, bare sand area'), ('dune-beneath-vegetation', 'Dune, beneath tree or shrub'), ('slope-front-dune', 'Dune, front slope'), ('sand-flats', 'Sand flats'), ('slope-grass', 'Slope, grass area'), ('slope-bare-sand', 'Slope, bare sand area'), ('slope-beneath-vegetation', 'Slope, beneath tree or shrub'), ('below-mean-spring-high-water-mark', 'Below the mean spring high water line or current level of inundation (old db value)'), ('below-mshwm', 'Below the mean spring high water line or current level of inundation'), ('lagoon-patch-reef', 'Lagoon, patch reef'), ('lagoon-open-sand', 'Lagoon, open sand areas'), ('mangroves', 'Mangroves'), ('reef-coral', 'Coral reef'), ('reef-crest-front-slope', 'Reef crest (dries at low water) and front reef slope areas'), ('reef-flat', 'Reef flat, dries at low tide'), ('reef-seagrass-flats', 'Coral reef with seagrass flats'), ('reef-rocky', 'Rocky reef'), ('open-water', 'Open water'), ('harbour', 'Harbour'), ('boat-ramp', 'Boat ramp')], default='na', help_text='The habitat in which the nest was encountered.', max_length=500, verbose_name='Habitat'),
        ),
        migrations.AlterField(
            model_name='turtledamageobservation',
            name='body_part',
            field=models.CharField(choices=[('head', 'Head'), ('eyes', 'Eyes'), ('neck', 'Neck'), ('plastron', 'Plastron'), ('carapace', 'Carapace'), ('internals', 'Internal organs'), ('cloaca', 'Cloaca'), ('tail', 'Tail'), ('flipper-front-left-1', 'Front left flipper, 1st scale from body'), ('flipper-front-left-2', 'Front left flipper, 2nd scale from body'), ('flipper-front-left-3', 'Front left flipper, 3rd scale from body'), ('flipper-front-left', 'Front left flipper'), ('flipper-front-right-1', 'Front right flipper, 1st scale from body'), ('flipper-front-right-2', 'Front right flipper, 2nd scale from body'), ('flipper-front-right-3', 'Front right flipper, 3rd scale from body'), ('flipper-front-right', 'Front right flipper'), ('flipper-rear-left', 'Fear left flipper'), ('flipper-rear-right', 'Fear right flipper'), ('shoulder-left', 'Left shoulder'), ('shoulder-right', 'Right shoulder'), ('whole', 'Whole turtle'), ('other', 'Other')], default='whole-turtle', help_text='The body part affected by the observed damage.', max_length=300, verbose_name='Affected body part'),
        ),
        migrations.AlterField(
            model_name='turtledamageobservation',
            name='damage_age',
            field=models.CharField(choices=[('healed-entirely', 'Entirely healed'), ('healed-partially', 'Partially healed'), ('fresh', 'Fresh')], default='healed-entirely', help_text='The age of the damage.', max_length=300, verbose_name='Damage age'),
        ),
        migrations.AlterField(
            model_name='turtledamageobservation',
            name='damage_type',
            field=models.CharField(choices=[('tip-amputated', 'Tip amputation'), ('amputated-from-nail', 'Amputation from nail'), ('amputated-half', 'Half amputation'), ('amputated-entirely', 'Entire amputation'), ('barnacles', 'Barnacles'), ('algal-growth', 'Algal growth'), ('tumor', 'Tumor'), ('tag-scar', 'Tag scar'), ('tag-seen', 'Tag seen but not identified'), ('cuts', 'Cuts'), ('boat-strike', 'Boat or propeller strike'), ('entanglement', 'Entanglement'), ('deformity', 'Deformity'), ('other', 'Other')], default='minor-trauma', help_text='The type of the damage.', max_length=300, verbose_name='Damage type'),
        ),
        migrations.AlterField(
            model_name='turtlehatchlingemergenceobservation',
            name='light_sources_present',
            field=models.CharField(choices=[('na', 'NA'), ('absent', 'Absent'), ('present', 'Present'), ('yes', 'Yes'), ('no', 'No')], default='na', help_text='', max_length=300, verbose_name='Light sources present during emergence'),
        ),
        migrations.AlterField(
            model_name='turtlehatchlingemergenceobservation',
            name='outlier_tracks_present',
            field=models.CharField(choices=[('na', 'NA'), ('absent', 'Absent'), ('present', 'Present'), ('yes', 'Yes'), ('no', 'No')], default='na', help_text='', max_length=300, verbose_name='Outlier tracks present'),
        ),
        migrations.AlterField(
            model_name='turtlehatchlingemergenceoutlierobservation',
            name='outlier_group_size',
            field=models.PositiveIntegerField(blank=True, help_text='', null=True, verbose_name='Number of tracks in outlier group'),
        ),
        migrations.AlterField(
            model_name='turtlenestencounter',
            name='habitat',
            field=models.CharField(choices=[('na', 'Unknown habitat'), ('beach-below-high-water', 'Beach below high water mark'), ('beach-above-high-water', 'Beach above high water mark and dune'), ('beach-edge-of-vegetation', 'Edge of vegetation'), ('in-dune-vegetation', 'Inside vegetation')], default='na', help_text='The habitat in which the track or nest was encountered.', max_length=500, verbose_name='Habitat'),
        ),
        migrations.DeleteModel(
            name='LoggerEncounter',
        ),
    ]
